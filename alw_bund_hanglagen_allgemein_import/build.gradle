import ch.so.agi.gretl.tasks.*
import ch.so.agi.gretl.api.TransferSet
import java.nio.file.Paths

apply plugin: 'ch.so.agi.gretl'

defaultTasks 'unzipData'

def pathToTempFolder = System.getProperty('java.io.tmpdir')
def pathToUnzipFolder = Paths.get(pathToTempFolder, 'upload')

def gpkLocation26 = Paths.get(pathToUnzipFolder.toString(), "hang_steillagen_26_2056.gpkg")
def gpkLocation27 = Paths.get(pathToUnzipFolder.toString(), "hang_steillagen_27_2056.gpkg")
def gpkLocation31 = Paths.get(pathToUnzipFolder.toString(), "hang_steillagen_31_2056.gpkg")
def gpkLocation32 = Paths.get(pathToUnzipFolder.toString(), "hang_steillagen_32_2056.gpkg")


def editDb = [dbUriEdit, dbUserEdit, dbPwdEdit]
def stageSchema = "alw_bund_hanglagen_allgemein_v2"


tasks.register("unzipData", Copy) {
    description = "hang_steillagen.zip."
    doLast {
        println "File unzipped to directory: " + pathToUnzipFolder
    }
    from "upload/uploadFile"
    into 'upload/'              
    include "**/*.gpkg"
}

tasks.register("deleteRows", SqlExecutor) {
    dependsOn 'unzipData'
    description = 'Leert die Tabellem im Schema edit alw_bund_hanglagen_allgemein_v1*'
    database = editDb
    sqlFiles = files('hl_allgemein.sql')
}

tasks.register("importHanglagen26", GpkgImport) {
    dependsOn 'deleteRows'
    description = 'Importiert die Hanglagen"'
    database = editDb
    schemaName = stageSchema
    srcTableName = "hl_allgemein"
    dstTableName = "hl_allgemein"
    dataFile = file(gpkLocation26)
}

tasks.register("importHanglagen27", GpkgImport) {
    dependsOn 'importHanglagen26'
    description = 'Importiert die Hanglagen"'
    database = editDb
    schemaName = stageSchema
    srcTableName = "hl_allgemein"
    dstTableName = "hl_allgemein"
    dataFile = file(gpkLocation27)
}

tasks.register("importHanglagen31", GpkgImport) {
    dependsOn 'importHanglagen27'
    description = 'Importiert die Hanglagen"'
    database = editDb
    schemaName = stageSchema
    srcTableName = "hl_allgemein"
    dstTableName = "hl_allgemein"
    dataFile = file(gpkLocation31)
}

tasks.register("importHanglagen32", GpkgImport) {
    dependsOn 'importHanglagen32'
    description = 'Importiert die Hanglagen"'
    database = editDb
    schemaName = stageSchema
    srcTableName = "hl_allgemein"
    dstTableName = "hl_allgemein"
    dataFile = file(gpkLocation32)
}