import ch.so.agi.gretl.tasks.*
import ch.so.agi.gretl.api.TransferSet

apply plugin: 'ch.so.agi.gretl'

defaultTasks 'refreshSolr'


task publishEdit(type: Publisher) {
    database = [dbUriEdit, dbUserEdit, dbPwdEdit]
    dataIdent = "ch.so.awjf.waldstandorte.relational"
    dbSchema = "awjf_waldstandorte_v1"
    modelsToPublish = "SO_AWJF_Waldstandorte_20211027"
    target = ["sftp://$sftpServerSogis/$sftpUserSogis", sftpUserSogis, sftpPwdSogis]
    kgdiService = [simiMetadataServiceUrl, simiMetadataServiceUser, simiMetadataServicePwd]
    kgdiTokenService = [simiTokenServiceUrl, simiTokenServiceUser, simiTokenServicePwd]
    grooming = new File(file(projectDir).getParentFile(), "publisher_grooming.json")
    if (findProperty('ilivalidatorModeldir')) modeldir = ilivalidatorModeldir
}

task transferAwjfEdit(type: Db2Db, dependsOn: 'publishEdit') {
    sourceDb = [dbUriEdit, dbUserEdit, dbPwdEdit]
    targetDb = [dbUriPub, dbUserPub, dbPwdPub]
    transferSets = [
            new TransferSet('awjf_waldstandorte_pub.sql', 'awjf_waldstandorte_pub_v1.waldstandort', true),
            new TransferSet('awjf_wald_oberhoehenbonitaet_pub.sql', 'awjf_wald_oberhoehenbonitaet_pub_v1.oberhoehenbonitaet', true)
    ];
}

task publipubOberhoehenbonitaet(type: Publisher, dependsOn: 'transferAwjfEdit') {
    dataIdent = "ch.so.awjf.oberhoehenbonitaet"
    userFormats = true
    database = [dbUriPub,dbUserPub,dbPwdPub]
    dbSchema = "awjf_wald_oberhoehenbonitaet_pub_v1"
    modelsToPublish = "SO_AWJF_Wald_Oberhoehenbonitaet_20211027"
    target = ["sftp://$sftpServerSogis/$sftpUserSogis", sftpUserSogis, sftpPwdSogis]
    kgdiService = [simiMetadataServiceUrl, simiMetadataServiceUser, simiMetadataServicePwd]
    kgdiTokenService = [simiTokenServiceUrl, simiTokenServiceUser, simiTokenServicePwd]
    grooming = new File(file(projectDir).getParentFile(), "publisher_grooming.json")
    if (findProperty('ilivalidatorModeldir')) modeldir = ilivalidatorModeldir
}

task publishPub(type: Publisher, dependsOn: 'publipubOberhoehenbonitaet') {
    database = [dbUriPub, dbUserPub, dbPwdPub]
    dataIdent = "ch.so.awjf.waldstandorte"
    dbSchema = "awjf_waldstandorte_pub_v1"
    modelsToPublish = "SO_AWJF_Waldstandorte_Publikation_20211027"
    userFormats = true
    target = ["sftp://$sftpServerSogis/$sftpUserSogis", sftpUserSogis, sftpPwdSogis]
    kgdiService = [simiMetadataServiceUrl, simiMetadataServiceUser, simiMetadataServicePwd]
    kgdiTokenService = [simiTokenServiceUrl, simiTokenServiceUser, simiTokenServicePwd]
    grooming = new File(file(projectDir).getParentFile(), "publisher_grooming.json")
    if (findProperty('ilivalidatorModeldir')) modeldir = ilivalidatorModeldir
}

task refreshSolr(type:Exec, dependsOn: 'publishPub') {
    commandLine 'curl', '-i', '--max-time', '20', solrIndexupdaterBaseUrl + '/queue?ds=ch.so.awjf.schutzwaldausscheidung,ch.so.awjf.schutzwald_hauptgefahrenpotentiale,ch.so.awjf.bestandeskarte_wald_flaechen,ch.so.awjf.waldplan.waldeigentum,ch.so.awjf.waldplan.waldfunktion,ch.so.awjf.waldplan.waldplantyp'
}

