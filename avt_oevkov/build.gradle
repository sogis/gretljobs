import ch.so.agi.gretl.tasks.*
import ch.so.agi.gretl.api.TransferSet

apply plugin: 'ch.so.agi.gretl'


description = "GRETL-Job fÃ¼r die Berechnung des OEVKOV in der Test sogis-DB"

def dataPath= '/home/barpasen/gretljobs/avt_oevkov_import/'

// OEVKOV Variablen
def currentYear = '2019'
def lastYear = '2018'


defaultTasks 'do_Gesamtberechnung'

task AuswertungGTFS(type: SqlExecutor){
    database = [dbUriSogis, dbUserSogis, dbPwdSogis]
    sqlParameters = [currentYear: currentYear, lastYear: lastYear]
    sqlFiles = ['insert_into_gtfs_auswertung.sql']
}

task AuswertungGesamt(type: SqlExecutor){
    database = [dbUriSogis, dbUserSogis, dbPwdSogis]
    sqlParameters = [currentYear: currentYear, lastYear: lastYear]
    sqlFiles = ['insert_into_gesamtauswertung.sql']
}

task AuswertungKosten(type: SqlExecutor){
    database = [dbUriSogis, dbUserSogis, dbPwdSogis]
    sqlParameters = [currentYear: currentYear, lastYear: lastYear]
    sqlFiles = ['berechnung_kosten.sql']
}

task AuswertungHaltestellenbuffer(type: SqlExecutor){
    database = [dbUriSogis, dbUserSogis, dbPwdSogis]
    sqlParameters = [currentYear: currentYear, lastYear: lastYear]
    sqlFiles = ['haltestellenbuffer_insert.sql']
}


task do_Gesamtberechnung(){
    description = "This task performs all OEVKOV calculation tasks."
    doLast {
        println "Gesamtberechnung finished"
    }
}

do_Gesamtberechnung.dependsOn{
    tasks.findAll { task -> task.name.startsWith('Auswertung')}
}

