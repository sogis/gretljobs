import ch.so.agi.gretl.tasks.*
import ch.so.agi.gretl.api.TransferSet

apply plugin: 'ch.so.agi.gretl'


description = "GRETL-Job f√ºr die Berechnung des OEVKOV in der Edit-DB"


// OEVKOV Variablen
def currentYear = '2023'


defaultTasks 'insertHaltestellenbuffer'


task auswertungGTFS(type: SqlExecutor){
    database = [dbUriEdit, dbUserEdit, dbPwdEdit]
    sqlParameters = [currentYear: currentYear]
    sqlFiles = ['insert_gtfs_auswertung.sql']
}

task auswertungGTFSGewichtung(type: SqlExecutor, dependsOn: auswertungGTFS){
    database = [dbUriEdit, dbUserEdit, dbPwdEdit]
    sqlParameters = [currentYear: currentYear]
    sqlFiles = ['update_gtfs_auswertung_gewichtung.sql']
}

task auswertungGesamt(type: SqlExecutor, dependsOn: auswertungGTFSGewichtung){
    database = [dbUriEdit, dbUserEdit, dbPwdEdit]
    sqlParameters = [currentYear: currentYear]
    sqlFiles = ['insert_gesamtauswertung.sql']
}

task auswertungGesamtKorrekturen(type: SqlExecutor, dependsOn: auswertungGesamt){
    database = [dbUriEdit, dbUserEdit, dbPwdEdit]
    sqlParameters = [currentYear: currentYear]
    sqlFiles = ['insert_gesamtauswertung_korrekturen.sql']
}

task updateKosten(type: SqlExecutor, dependsOn: auswertungGesamtKorrekturen){
    database = [dbUriEdit, dbUserEdit, dbPwdEdit]
    sqlParameters = [currentYear: currentYear]
    sqlFiles = ['update_kosten.sql']
}

task updateLinieStichtag(type: SqlExecutor, dependsOn: updateKosten){
    database = [dbUriEdit, dbUserEdit, dbPwdEdit]
    sqlParameters = [currentYear: currentYear]
    sqlFiles = ['update_linie_stichtag.sql']
}

task insertHaltestellenbuffer(type: SqlExecutor, dependsOn: updateLinieStichtag){
    database = [dbUriEdit, dbUserEdit, dbPwdEdit]
    sqlParameters = [currentYear: currentYear]
    sqlFiles = ['insert_haltestellenbuffer.sql']
}
