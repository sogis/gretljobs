import ch.so.agi.gretl.api.TransferSet
import ch.so.agi.gretl.tasks.*
import java.nio.file.Paths

defaultTasks 'publipub'
/*
defaultTasks 'uploadMgdmNetzgebiete'
*/


def pathToTempFolder = System.getProperty("java.io.tmpdir")

def mgdmNetzgebieteXtfFileName = "ch.so.awa.stromversorgungssicherheit_netzgebiete.mgdm.xtf"
def mgdmNetzgebieteZipFileName = "ch.so.awa.stromversorgungssicherheit_netzgebiete.mgdm.zip"


def aiLogin = aiUser + ":" + aiPwd

task transferNetzgebiete(type: Db2Db){
    sourceDb = [dbUriEdit, dbUserEdit, dbPwdEdit]
    targetDb = [dbUriPub, dbUserPub, dbPwdPub]
    transferSets = [
            new TransferSet('awa_stromversorgungssicherheit_pub_ebene_3.sql', 'awa_stromversorgungssicherheit_pub.netzbetreiber_ebene_3', true),
            new TransferSet('awa_stromversorgungssicherheit_pub_ebene_5.sql', 'awa_stromversorgungssicherheit_pub.netzbetreiber_ebene_5', true),
            new TransferSet('awa_stromversorgungssicherheit_pub_ebene_7.sql', 'awa_stromversorgungssicherheit_pub.netzbetreiber_ebene_7', true)
    ];
}

task publipub(type: Publisher, dependsOn:'transferNetzgebiete'){
  dataIdent = "ch.so.awa.netzgebiete"
  userFormats = true
  database = [dbUriPub,dbUserPub,dbPwdPub]
  dbSchema = "awa_stromversorgungssicherheit_pub"
  modelsToPublish = "SO_AWA_Stromversorgungssicherheit_Publikation_20210629"

  target = ["sftp://$sftpServerSogis/$sftpUserSogis", sftpUserSogis, sftpPwdSogis]
  kgdiService = [simiMetadataServiceUrl, simiMetadataServiceUser, simiMetadataServicePwd]
  kgdiTokenService = [simiTokenServiceUrl, simiTokenServiceUser, simiTokenServicePwd]
  grooming = new File(file(projectDir).getParentFile(), "publisher_grooming.json")
  if (findProperty('ilivalidatorModeldir')) modeldir = ilivalidatorModeldir
}

