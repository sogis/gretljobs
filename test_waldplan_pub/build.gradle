import ch.so.agi.gretl.tasks.*
import ch.so.agi.gretl.api.TransferSet

import java.nio.file.Paths
import de.undercouch.gradle.tasks.download.Download

apply plugin: 'ch.so.agi.gretl'


defaultTasks 'refreshSolr'


task deleteAwjfWaldplanPub(type: SqlExecutor){
    database = [dbUriPub, dbUserPub, dbPwdPub]
    sqlFiles = ['delete_awjf_waldplan_bestandeskarte_pub.sql']      
}

task transferAwjfWaldplanUebersichtPub(type: Db2Db, dependsOn: deleteAwjfWaldplanPub){
    sourceDb = [dbUriEdit, dbUserEdit, dbPwdEdit]
    targetDb = [dbUriPub, dbUserPub, dbPwdPub]
    transferSets = [
             new TransferSet('awjf_waldplan_bestandeskarte_uebersicht_pub.sql', 'awjf_waldplan_bestandeskarte_pub_v1.waldplan_uebersicht', true)
    ];        
}

task transferAwjfWaldplanPub(type: Db2Db, dependsOn: transferAwjfWaldplanUebersichtPub){
    sourceDb = [dbUriEdit, dbUserEdit, dbPwdEdit]
    targetDb = [dbUriPub, dbUserPub, dbPwdPub]
    transferSets = [
            new TransferSet('awjf_waldplan_bestandeskarte_pub.sql', 'awjf_waldplan_bestandeskarte_pub_v1.waldplan_bestandeskarte', false)
    ];        
}

task refreshSolr(type: Exec, dependsOn: transferAwjfWaldplanPub) {
    commandLine 'curl', '-i', '--max-time', '10', solrIndexupdaterBaseUrl + '/queue?ds=ch.so.awjf.bestandeskarte_wald_flaechen,ch.so.awjf.waldplan.waldeigentum,ch.so.awjf.waldplan.waldfunktion,ch.so.awjf.waldplan.waldplantyp'
}
