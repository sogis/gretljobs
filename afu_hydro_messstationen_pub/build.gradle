import ch.so.agi.gretl.tasks.*
import ch.so.agi.gretl.api.TransferSet

apply plugin: 'ch.so.agi.gretl'

defaultTasks 'publishPub'

task publishEdit(type: Publisher){
    database = [dbUriEdit, dbUserEdit, dbPwdEdit]
    dataIdent = "ch.so.afu.hydrometrie.messstationen.relational"
    dbSchema = "afu_hydro_messstationen_v1"
    modelsToPublish = "SO_AFU_Hydro_Messstationen_20220706"
    target = ["sftp://$sftpServerSogis/$sftpUserSogis", sftpUserSogis, sftpPwdSogis]
    kgdiService = [simiMetadataServiceUrl, simiMetadataServiceUser, simiMetadataServicePwd]
    kgdiTokenService = [simiTokenServiceUrl, simiTokenServiceUser, simiTokenServicePwd]
    grooming = new File(file(projectDir).getParentFile(), "publisher_grooming.json")
    if (findProperty('ilivalidatorModeldir')) modeldir = ilivalidatorModeldir
}

task transferData(type: Db2Db, dependsOn:publishEdit){
    sourceDb = [dbUriEdit, dbUserEdit, dbPwdEdit]
    targetDb = [dbUriPub, dbUserPub, dbPwdPub]
    transferSets = [
            new TransferSet('messstationen.sql', 'afu_hydro_messstationen_pub_v1.messstationen', true),
    ];
}

task updateTypTxt(type: SqlExecutor, dependsOn:transferData){
    description = "Bef√ºllt die _txt-Spalten zum Typ"
    database = [dbUriPub, dbUserPub, dbPwdPub]
    sqlFiles = ['update_typ.sql']
}

task publishPub(type: Publisher, dependsOn:updateTypTxt){
    database = [dbUriPub, dbUserPub, dbPwdPub]
    dataIdent = "ch.so.afu.hydrometrie.messstationen"
    dbSchema = "afu_hydro_messstationen_pub_v1"
    modelsToPublish = "SO_AFU_Hydro_Messstationen_Publikation_20220707"
	userFormats = true
    target = ["sftp://$sftpServerSogis/$sftpUserSogis", sftpUserSogis, sftpPwdSogis]
    kgdiService = [simiMetadataServiceUrl, simiMetadataServiceUser, simiMetadataServicePwd]
    kgdiTokenService = [simiTokenServiceUrl, simiTokenServiceUser, simiTokenServicePwd]
    grooming = new File(file(projectDir).getParentFile(), "publisher_grooming.json")
    if (findProperty('ilivalidatorModeldir')) modeldir = ilivalidatorModeldir
}
