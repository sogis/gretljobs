import ch.so.agi.gretl.tasks.*
import ch.so.agi.gretl.api.TransferSet

apply plugin: 'ch.so.agi.gretl'

defaultTasks 'publishPub', 'updateSearchIndex_1', 'updateSearchIndex_2'

task transferAwjfFischerei(type: Db2Db){
    sourceDb = [dbUriEdit, dbUserEdit, dbPwdEdit]
    targetDb = [dbUriPub, dbUserPub, dbPwdPub]
    transferSets = [
            new TransferSet('fischerei.sql', 'awjf_gewaesser_fischerei_pub_v1.fischrevier', true)
    ];
}

task publishPub(type: Publisher, dependsOn: 'transferAwjfFischerei'){
    database = [dbUriPub, dbUserPub, dbPwdPub]
    dataIdent = "ch.so.awjf.gewaesser.fischerei"
    dbSchema = "awjf_gewaesser_fischerei_pub_v1"
    modelsToPublish = "SO_AWJF_Gewaesser_Fischerei_Publikation_20220429"
    userFormats = true
    target = [sftpUrlSogis, sftpUserSogis, sftpPwdSogis]
    kgdiService = [simiMetadataServiceUrl, simiMetadataServiceUser, simiMetadataServicePwd]
    kgdiTokenService = [simiTokenServiceUrl, simiTokenServiceUser, simiTokenServicePwd]
    grooming = new File(file(projectDir).getParentFile(), "publisher_grooming.json")
    if (findProperty('ilivalidatorModeldir')) modeldir = ilivalidatorModeldir
}

task updateSearchIndex_1(type: SqlExecutor){
    mustRunAfter 'publishPub'
    def layerName = 'ch.so.awjf.gewaesser.fischereireviere'
    def sqlFileName = 'searchindex_' + layerName + '.sql'

    database = [dbUriPub, dbUserPub, dbPwdPub]
    def dbSearchSchema = dbSearchSchemaPub
    String layerNameString = "'${layerName}'"

    sqlParameters = [
            [layername: layerNameString, db_schema: dbSearchSchema]
    ]
    sqlFiles = [
            '../searchindex_deleteFeatures.sql',
            sqlFileName
    ]
    doFirst {
        println 'layer name: ' + layerName
    }
}

task updateSearchIndex_2(type: SqlExecutor){
    mustRunAfter 'publishPub'
    def layerName = 'ch.so.awjf.gewaesser.patentgewaesser'
    def sqlFileName = 'searchindex_ch.so.awjf.gewaesser.fischereireviere.sql' //<<<< speziell

    database = [dbUriPub, dbUserPub, dbPwdPub]
    def dbSearchSchema = dbSearchSchemaPub
    String layerNameString = "'${layerName}'"

    sqlParameters = [
            [layername: layerNameString, db_schema: dbSearchSchema]
    ]
    sqlFiles = [
            '../searchindex_deleteFeatures.sql',
            sqlFileName
    ]
    doFirst {
        println 'layer name: ' + layerName
    }
}
