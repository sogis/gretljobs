/*
buildscript {
	repositories {
        mavenLocal()
		maven { url "http://jars.interlis.ch" }
		maven { url "http://jars.umleditor.org" }
		maven { url "https://repo.osgeo.org/repository/release/" }
		maven { url "https://plugins.gradle.org/m2/" }
		maven { url "https://dl.bintray.com/sogis/iox-wkf" } // temporary
		mavenCentral()
	}
	dependencies {
		classpath group: 'ch.so.agi', name: 'gretl',  version: '2.1.70'
		//classpath group: 'ch.so.agi', name: 'gretl',  version: '2.1.9999'
	}
}
*/

import java.text.SimpleDateFormat
import java.nio.file.Paths
import java.nio.file.Files
import java.io.File
import ch.so.agi.gretl.tasks.*
import ch.so.agi.gretl.api.*
import ch.so.agi.gretl.util.TaskUtil

apply plugin: 'ch.so.agi.gretl'

defaultTasks 'deleteFtpFiles'

def pathToTempFolder = Files.createTempDirectory("agiavimport-").toFile().getAbsolutePath()
def pathToUnzipFolder = Paths.get(pathToTempFolder, 'unzip_data')
//pathToUnzipFolder = "/var/folders/1y/52jlt1cd1l557f_hgd9xxgm00000gn/T/agiavimport-9037765408044600052/unzip_data"
def pathToFederalFolder = Paths.get(pathToTempFolder, 'ch')
def pathToGeobauFolder = Paths.get(pathToTempFolder, 'geobau')
//def pathToUnzipFolder = Files.createTempDirectory("agiavimport-unzip_data-").toFile().getAbsolutePath()

def bucketNameCanton = "ch.so.agi.av.dm01avso24lv95"
def bucketNameFederal = "ch.so.agi.av.dm01avch24lv95d"
def bucketNameGeobau = "ch.so.agi.av.dxfgeobau"

// FIXME
//bucketNameCanton += "-dev"
//bucketNameFederal += "-dev"
//bucketNameGeobau += "-dev"

if (gretlEnvironment == "test") {
    bucketNameCanton += "-test"
    bucketNameFederal += "-test"
    bucketNameGeobau += "-test"
} else if (gretlEnvironment == "integration") {
    bucketNameCanton += "-int"
    bucketNameFederal += "-int"
    bucketNameGeobau += "-int"
} else if (gretlEnvironment == "production") {
    // do nothing
} else {
    bucketNameCanton += "-dev"
    bucketNameFederal += "-dev"
    bucketNameGeobau += "-dev"
}

task downloadFiles(type: FtpDownload) {
    server = ftpServerInfogrips
    user = ftpUserInfogrips
    password = ftpPwdInfogrips
    systemType = "WINDOWS"
    fileType = "BINARY"
    localDir = pathToTempFolder
    remoteDir = "\\dm01avso24lv95\\itf"
    remoteFile = "*.zip"

    doLast {
        println "Files downloaded: " + pathToTempFolder
    }
}

task uploadFiles(type: S3Upload, dependsOn: 'downloadFiles') {
    accessKey = awsAccessKeyAgi
    secretKey = awsSecretAccessKeyAgi
    bucketName = bucketNameCanton
    sourceFiles = fileTree(pathToTempFolder) { include "*.zip" }
    acl = "public-read"
}

task unzipFiles(dependsOn: 'uploadFiles') {
    doLast {
        fileTree(pathToTempFolder).files.each {
            String fileName = it
            copy {
                from zipTree(fileName)
                into file(pathToUnzipFolder)

                include "**/*.itf"
                include "**/*.ITF"

                rename { String jt ->
                    return jt.toLowerCase()
                }
            }
        }
        println "File unzipped to directory: " + pathToUnzipFolder
    }
}

task createFederalFiles(type: Av2ch, dependsOn: 'unzipFiles') {
    inputFile = fileTree(pathToUnzipFolder) { include '*.itf' }
    outputDirectory = file(pathToFederalFolder)
    modeldir = "https://geo.so.ch/models/"
    zip = true

    doLast {
        println "Federal files created: " + pathToFederalFolder
    }
}

task uploadFederalFiles(type: S3Upload, dependsOn: 'createFederalFiles') {
    accessKey = awsAccessKeyAgi
    secretKey = awsSecretAccessKeyAgi
    bucketName = bucketNameFederal
    sourceFiles = fileTree(pathToFederalFolder) { include "*.zip" }
    acl = "public-read"
}

task createDxfGeobauFiles(type: Av2geobau, dependsOn: 'uploadFederalFiles') {
    itfFiles = fileTree(pathToFederalFolder) { include "*.itf" }
    dxfDirectory = file(pathToGeobauFolder)
    zip = true

    doLast {
        println "Geobau files created: " + pathToGeobauFolder
    }
}

task uploadDxfGeobauFiles(type: S3Upload, dependsOn: 'createDxfGeobauFiles') {
    accessKey = awsAccessKeyAgi
    secretKey = awsSecretAccessKeyAgi
    bucketName = bucketNameGeobau
    sourceFiles = fileTree(pathToGeobauFolder) { include "*.zip" }
    acl = "public-read"
}

//task importData(type: Ili2pgReplace, dependsOn: 'unzipFiles') {
task importData(type: Ili2pgReplace, dependsOn: 'uploadDxfGeobauFiles') {
    database = [dbUriEdit, dbUserEdit, dbPwdEdit]
    models = 'DM01AVSO24LV95'
    dbschema = 'agi_dm01avso24'
    dataFile = fileTree(dir: pathToUnzipFolder, include: '*.itf')
    dataset = dataFile
    datasetSubstring = 0..4

    disableValidation = true

    doLast {
        println "Data imported into db: " + dbUriEdit
    }
}

task deleteFtpFiles(type: FtpDelete, dependsOn: 'importData') {
    onlyIf {
        gretlEnvironment == "production"
    }
    server = ftpServerInfogrips
    user = ftpUserInfogrips
    password = ftpPwdInfogrips
    systemType = "WINDOWS"
    remoteDir = "\\dm01avso24lv95\\itf"
    remoteFile = fileTree(pathToTempFolder) { include '*.zip' }
}
