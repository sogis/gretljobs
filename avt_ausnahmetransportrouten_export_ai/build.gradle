/*
Publiziert die AVT Ausnahmetransportrouten nach geodienste.ch
*/

import java.nio.file.Files
import java.nio.file.Paths
import java.io.File
import ch.so.agi.gretl.tasks.*
import ch.so.agi.gretl.api.TransferSet

defaultTasks 'uploadMgdm'

/*
Package and upload to the KKGEO AI
*/
def uploadFileName = 'uploadFile'
def exportFileName = 'data.xtf'
def pathToUploadFolder = 'upload'
def zipName = 'iliexport.zip'
def pathToTempFolder = System.getProperty("java.io.tmpdir")

task copyXtfFile(type: Copy) {
    from "upload/"
    into "upload/"
    include("uploadFile")
    rename uploadFileName, exportFileName
}

/**
 * Validiere den Datensatz.
 */
task validateData(type: IliValidator){
    dependsOn "copyXtfFile"
    description "Validiere den importierten Datensatz"
    dataFiles = files(upload/uploadFileName)
    logFile = "validation.log"
}

task zipMgdm(type: Zip) {
    dependsOn "validateData"
    archiveName = zipName
    destinationDir = file(pathToTempFolder)

    from Paths.get(pathToUploadFolder)
    rename uploadFileName, exportFileName
}

task uploadMgdm (dependsOn: zipMgdm) {
    description = "LÃ¤dt die Daten in die Aggregationsinfrastruktur hoch."

    def aiLogin = aiUser + ":" + aiPwd
    def serverUrl = "https://" + aiServer + "/data_agg/interlis/import"
    def zipFilePath = Paths.get(pathToTempFolder, zipName)

    doLast {    
        def response = ["curl", "-u", aiLogin, "-F", "topic=kantonale_ausnahmetransportrouten", "-F",
                        "lv95_file=@" + zipFilePath, "-F", "publish=true", serverUrl
                        ].execute().text
        println(response)
    }
}
