import ch.so.agi.gretl.tasks.*
import ch.so.agi.gretl.api.TransferSet

apply plugin: 'ch.so.agi.gretl'

defaultTasks 'publipub'

task publiedit(type: Publisher){
    dataIdent = "ch.so.awjf.seltene_baumarten.relational"
    database = [dbUriEdit,dbUserEdit,dbPwdEdit]
    dbSchema = "awjf_seltene_baeume"
    modelsToPublish = "SO_AWJF_Seltene_Baumarten_20190211"

    target = [sftpUrlSogis, sftpUserSogis, sftpPwdSogis]
    kgdiService = [simiMetadataServiceUrl, simiMetadataServiceUser, simiMetadataServicePwd]
    kgdiTokenService = [simiTokenServiceUrl, simiTokenServiceUser, simiTokenServicePwd]
    grooming = new File(file(projectDir).getParentFile(), "publisher_grooming.json")
    if (findProperty('ilivalidatorModeldir')) modeldir = ilivalidatorModeldir
}


task transferAwjfSelteneBaeume(type: Db2Db, dependsOn: 'publiedit'){
    sourceDb = [dbUriEdit, dbUserEdit, dbPwdEdit]
    targetDb = [dbUriPub, dbUserPub, dbPwdPub]
    transferSets = [
            new TransferSet('awjf_seltene_baeume_freistellung.sql', 'awjf_seltene_baeume_pub.seltene_baumarten_freistellung', true),
            new TransferSet('awjf_seltene_baeume_pflanzung.sql', 'awjf_seltene_baeume_pub.seltene_baumarten_pflanzung', true)
    ];
}

task publipub(type: Publisher, dependsOn: 'transferAwjfSelteneBaeume'){
    dataIdent = "ch.so.awjf.seltene_baumarten"
    userFormats = true
    database = [dbUriPub,dbUserPub,dbPwdPub]
    dbSchema = "awjf_seltene_baeume_pub"
    modelsToPublish = "SO_AWJF_Seltene_Baumarten_Publikation_20191015"

    target = [sftpUrlSogis, sftpUserSogis, sftpPwdSogis]
    kgdiService = [simiMetadataServiceUrl, simiMetadataServiceUser, simiMetadataServicePwd]
    kgdiTokenService = [simiTokenServiceUrl, simiTokenServiceUser, simiTokenServicePwd]
    grooming = new File(file(projectDir).getParentFile(), "publisher_grooming.json")
    if (findProperty('ilivalidatorModeldir')) modeldir = ilivalidatorModeldir
}

