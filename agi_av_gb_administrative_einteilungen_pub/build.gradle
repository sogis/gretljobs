import ch.so.agi.gretl.tasks.*
import ch.so.agi.gretl.api.TransferSet

defaultTasks 'publipubDMAVSUP'

task transferAvGbAdminEinteilungen(type: Db2Db){
    sourceDb = [dbUriEdit, dbUserEdit, dbPwdEdit]
    targetDb = [dbUriPub, dbUserPub, dbPwdPub]
    transferSets = [
            new TransferSet("transform_nachfuehrngskrise_gemeinde.sql", 'agi_av_gb_admin_einteilung_pub.nachfuehrngskrise_gemeinde', true),
            new TransferSet("transform_grundbuchkreise_grundbuchkreis.sql", 'agi_av_gb_admin_einteilung_pub.grundbuchkreise_grundbuchkreis', true)
    ];
}

task transferDMAV(type: SqlExecutor, dependsOn:'transferAvGbAdminEinteilungen') {
    description = "LÃ¶scht/leert die Daten aus dem Schema arp_nutzungsplanung_transfer."
    database = [dbUriEdit, dbUserEdit, dbPwdEdit]
    sqlFiles = ["dmav_transfer.sql"]
}

task publipub(type: Publisher, dependsOn:'transferDMAV'){
  dataIdent = "ch.so.agi.av.administrative_einteilung"
  userFormats = true
  database = [dbUriPub,dbUserPub,dbPwdPub]
  dbSchema = "agi_av_gb_admin_einteilung_pub"
  modelsToPublish = "SO_AGI_AV_GB_Administrative_Einteilungen_Publikation_20180822"

  target = [sftpUrlSogis, sftpUserSogis, sftpPwdSogis]
  kgdiService = [simiMetadataServiceUrl, simiMetadataServiceUser, simiMetadataServicePwd]
  kgdiTokenService = [simiTokenServiceUrl, simiTokenServiceUser, simiTokenServicePwd]
  grooming = new File(file(projectDir).getParentFile(), "publisher_grooming.json")
  if (findProperty('ilivalidatorModeldir')) modeldir = ilivalidatorModeldir
}

task publieditDMAVSUP(type: Publisher, dependsOn:'publipub'){
  dataIdent = "ch.so.agi.av.administrative_einteilung.DMAVSUP"
  userFormats = false
  database = [dbUriPub,dbUserPub,dbPwdPub]
  dbSchema = "agi_dmav_untereinheit_grundbuch_v1"
  modelsToPublish = "DMAVSUP_UntereinheitGrundbuch_V1_0"

  target = [sftpUrlSogis, sftpUserSogis, sftpPwdSogis]
  kgdiService = [simiMetadataServiceUrl, simiMetadataServiceUser, simiMetadataServicePwd]
  kgdiTokenService = [simiTokenServiceUrl, simiTokenServiceUser, simiTokenServicePwd]
  grooming = new File(file(projectDir).getParentFile(), "publisher_grooming.json")
  if (findProperty('ilivalidatorModeldir')) modeldir = ilivalidatorModeldir
}
