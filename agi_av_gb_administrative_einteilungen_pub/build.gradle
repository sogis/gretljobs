import ch.so.agi.gretl.tasks.*
import ch.so.agi.gretl.api.TransferSet

defaultTasks 'publipub'

task transferAvGbAdminEinteilungen(type: Db2Db){
    sourceDb = [dbUriEdit, dbUserEdit, dbPwdEdit]
    targetDb = [dbUriPub, dbUserPub, dbPwdPub]
    transferSets = [
            new TransferSet("transform_nachfuehrngskrise_gemeinde.sql", 'agi_av_gb_admin_einteilung_pub.nachfuehrngskrise_gemeinde', true),
            new TransferSet("transform_grundbuchkreise_grundbuchkreis.sql", 'agi_av_gb_admin_einteilung_pub.grundbuchkreise_grundbuchkreis', true)
    ];
}

task transferDMAV(type: SqlExecutor, dependsOn:'transferAvGbAdminEinteilungen') {
    description = "baut die Daten in das Schema agi_dmav_untereinheit_grundbuch_v1 um."
    database = [dbUriEdit, dbUserEdit, dbPwdEdit]
    sqlFiles = ["dmav_transfer.sql"]
}

task exportDataEdit (type: Ili2pgExport, dependsOn:'transferDMAV') {
    description = "Exportiert die Daten dem Schema agi_dmav_untereinheit_grundbuch_v1 in eine INTERLIS-Datei."
    database = [dbUriEdit, dbUserEdit, dbPwdEdit]
    dbschema = 'agi_dmav_untereinheit_grundbuch_v1'
    models = 'DMAVSUP_UntereinheitGrundbuch_V1_0'
    dataFile = file("ch.so.agi.dmav.relational.untereinheitgrundbuch.xtf")
    disableValidation = true
}

task validateDataEdit(type: IliValidator, dependsOn:'exportDataEdit') {
    description = "Validiert die exportierten INTERLIS-Datei gegen das Modell."
    dataFiles = file("ch.so.agi.dmav.relational.untereinheitgrundbuch.xtf")
    if (findProperty('ilivalidatorModeldir')) modeldir = ilivalidatorModeldir
    allObjectsAccessible = true
    failOnError = true
}

task publiedit(type: Publisher, dependsOn:'validateDataEdit'){
    dataIdent = "ch.so.agi.dmav.relational.untereinheitgrundbuch"
    modelsToPublish = "DMAVSUP_UntereinheitGrundbuch_V1_0"
    userFormats = false
    sourcePath = file("ch.so.agi.dmav.relational.untereinheitgrundbuch.xtf")
    if (findProperty('ilivalidatorModeldir')) modeldir = ilivalidatorModeldir
    target = [sftpUrlSogis, sftpUserSogis, sftpPwdSogis]
    kgdiService = [simiMetadataServiceUrl, simiMetadataServiceUser, simiMetadataServicePwd]
    kgdiTokenService = [simiTokenServiceUrl, simiTokenServiceUser, simiTokenServicePwd]
    grooming = new File(file(rootDir).getParentFile(), "publisher_grooming.json")
}

task publipub(type: Publisher, dependsOn:'publiedit'){
  dataIdent = "ch.so.agi.av.administrative_einteilung"
  userFormats = true
  database = [dbUriPub,dbUserPub,dbPwdPub]
  dbSchema = "agi_av_gb_admin_einteilung_pub"
  modelsToPublish = "SO_AGI_AV_GB_Administrative_Einteilungen_Publikation_20180822"

  target = [sftpUrlSogis, sftpUserSogis, sftpPwdSogis]
  kgdiService = [simiMetadataServiceUrl, simiMetadataServiceUser, simiMetadataServicePwd]
  kgdiTokenService = [simiTokenServiceUrl, simiTokenServiceUser, simiTokenServicePwd]
  grooming = new File(file(projectDir).getParentFile(), "publisher_grooming.json")
  if (findProperty('ilivalidatorModeldir')) modeldir = ilivalidatorModeldir
}