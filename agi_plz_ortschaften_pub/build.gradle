import ch.so.agi.gretl.api.TransferSet
import ch.so.agi.gretl.tasks.*
import java.nio.file.Paths
import de.undercouch.gradle.tasks.download.Download



apply plugin: "de.undercouch.download"
apply plugin: 'ch.so.agi.gretl'


defaultTasks 'removeFiles'

def pathToTempFolder = System.getProperty("java.io.tmpdir")
def pathToUnzipFolder = Paths.get(pathToTempFolder, 'unzip_data')
def pathToDataZip = Paths.get(pathToTempFolder, "ortschaftenverzeichnis_plz_2056_de.itf.zip")
def xtfFilePath = Paths.get(pathToUnzipFolder.toString(), 'PLZO_INTERLIS_LV95', 'PLZO_ITF_LV95.itf')


task download(type: Download){
    description = "Download plz_ortschaften from swisstopo"
    doLast {
        println "File downloaded to: " + pathToTempFolder
    }
    src 'https://data.geo.admin.ch/ch.swisstopo-vd.ortschaftenverzeichnis_plz/ortschaftenverzeichnis_plz/ortschaftenverzeichnis_plz_2056_de.itf.zip'
    dest pathToTempFolder
    overwrite true
}


task unzipData(type: Copy, dependsOn: 'download'){
    description = "Unzip Data.zip."
    doLast {
        println "File unzipped to directory: " + pathToUnzipFolder
    }
    from zipTree(pathToDataZip)
    into file(pathToUnzipFolder)
    include "**/*.itf"
}

task dbImport(type: Ili2pgImport, dependsOn: 'unzipData'){
    description = "Import plz_ortschaften-Data into Edit database"
    doLast {
        println "Data imported into db: " + dbUriEdit
    }
    database = [dbUriEdit, dbUserEdit, dbPwdEdit]
    dbschema = "agi_plz_ortschaften"
    models = "PLZOCH1LV95D"
    disableValidation = false
    dataFile = file(xtfFilePath)
    deleteData = true
    strokeArcs = true
}

task convertDataEdit(type: SqlExecutor, dependsOn: 'dbImport'){
    description = "Convert plz_ortschaften-Data to Edit Schema"
    doLast {
        println "plz_ortschaften-Data are converted to Edit Schema."
    }
    database = [dbUriEdit, dbUserEdit, dbPwdEdit]
    sqlFiles = [
        'delete_ortschaft.sql',
        'delete_postleitzahl.sql',
        'insert_ortschaft.sql',
        'insert_postleitzahl.sql'
    ]
}

task copyDataPubSogis(type: Db2Db, dependsOn: 'convertDataEdit'){
    description = "Copy plz_ortschaften-Data to Sogis Pub Schema"
    doLast {
        println "plz_ortschaften-Data are copied to Sogis Pub Schema."
    }
    sourceDb = [dbUriEdit, dbUserEdit, dbPwdEdit]
    targetDb = [dbUriSogis, dbUserSogis, dbPwdSogis]
    transferSets = [
        new TransferSet('plzortschaften_ortschaft_sogis.sql', 'agi_plz_ortschaften_pub.plzortschaften_ortschaft', true),
        new TransferSet('plzortschaften_postleitzahl_sogis.sql', 'agi_plz_ortschaften_pub.plzortschaften_postleitzahl', true)
    ];
}


task copyDataSogis(type: Db2Db, dependsOn: 'copyDataPubSogis'){
    description = "Copy plz_ortschaften-Data to Sogis Schema"
    doLast {
        println "plz_ortschaften-Data are copied to Sogis Schema."
    }
    sourceDb = [dbUriEdit, dbUserEdit, dbPwdEdit]
    targetDb = [dbUriSogis, dbUserSogis, dbPwdSogis]
    transferSets = [
        new TransferSet('nummerierngsbrche_nbgeometrie.sql', 'agi_plz_ortschaften.nummerierngsbrche_nbgeometrie', true),
        new TransferSet('nummerierngsbrche_nummerierungsbereich.sql', 'agi_plz_ortschaften.nummerierngsbrche_nummerierungsbereich', true),
        new TransferSet('nummerierngsbrche_nummerierungsbereichpos.sql', 'agi_plz_ortschaften.nummerierngsbrche_nummerierungsbereichpos', true),
        new TransferSet('plzortschaft_ortschaft.sql', 'agi_plz_ortschaften.plzortschaft_ortschaft', true),
        new TransferSet('plzortschaft_ortschaftsname.sql', 'agi_plz_ortschaften.plzortschaft_ortschaftsname', true),
        new TransferSet('plzortschaft_ortschaftsname_pos.sql', 'agi_plz_ortschaften.plzortschaft_ortschaftsname_pos', true),
        new TransferSet('plzortschaft_ortschaftsverbund.sql', 'agi_plz_ortschaften.plzortschaft_ortschaftsverbund', true),
        new TransferSet('plzortschaft_ortschaftsverbundtext.sql', 'agi_plz_ortschaften.plzortschaft_ortschaftsverbundtext', true),
        new TransferSet('plzortschaft_osnachfuehrung.sql', 'agi_plz_ortschaften.plzortschaft_osnachfuehrung', true),
        new TransferSet('plzortschaft_plz6.sql', 'agi_plz_ortschaften.plzortschaft_plz6', true),
        new TransferSet('plzortschaft_plz6nachfuehrung.sql', 'agi_plz_ortschaften.plzortschaft_plz6nachfuehrung', true)
    ];
}

task copyDataPub(type: Db2Db, dependsOn: 'copyDataSogis'){
    description = "Copy plz_ortschaften-Data to Pub Schema"
    doLast {
        println "plz_ortschaften-Data are copied to Pub Schema."
    }
    sourceDb = [dbUriEdit, dbUserEdit, dbPwdEdit]
    targetDb = [dbUriPub, dbUserPub, dbPwdPub]
    transferSets = [
        new TransferSet('plzortschaften_ortschaft.sql', 'agi_plz_ortschaften_pub.plzortschaften_ortschaft', true),
        new TransferSet('plzortschaften_postleitzahl.sql', 'agi_plz_ortschaften_pub.plzortschaften_postleitzahl', true)
    ];
}

task removeFiles(type: Delete, dependsOn: 'copyDataPub') {
    description = "Remove Files"
    doLast {
        println "Files removed."
    }
    delete file(pathToUnzipFolder), file(pathToDataZip)
}
