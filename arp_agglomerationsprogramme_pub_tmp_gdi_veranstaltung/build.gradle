import ch.so.agi.gretl.tasks.*
import ch.so.agi.gretl.api.TransferSet

apply plugin: 'ch.so.agi.gretl'

defaultTasks 'publipub'

task publiedit(type: Publisher){
  dataIdent = "ch.so.arp.agglomerationsprogramme.relational"
  database = [dbUriEdit, dbUserEdit, dbPwdEdit]
  dbSchema = "arp_agglomerationsprogramme_v2"
  modelsToPublish = "SO_Agglomerationsprogramme_GDI_20230317"

  target = ["sftp://$sftpServerSogis/$sftpUserSogis", sftpUserSogis, sftpPwdSogis]
  kgdiService = [simiMetadataServiceUrl, simiMetadataServiceUser, simiMetadataServicePwd]
  kgdiTokenService = [simiTokenServiceUrl, simiTokenServiceUser, simiTokenServicePwd]
  grooming = new File(file(projectDir).getParentFile(), "publisher_grooming.json")
  if (findProperty('ilivalidatorModeldir')) modeldir = "https://github.com/sogis/schema-jobs/tree/main/topics/arp_agglomerationsprogramme/schema/; http://models.geo.admin.ch"
}

task transferArpAggloprogramme(type: Db2Db, dependsOn:publiedit){
    sourceDb = [dbUriEdit, dbUserEdit, dbPwdEdit]
    targetDb = [dbUriPub, dbUserPub, dbPwdPub]
    transferSets = [
        new TransferSet('arp_agglomerationsprogramme_pub_agglomrtnsprgrmme_massnahme.sql',
            'arp_agglomerationsprogramme_pub_v2.agglomrtnsprgrmme_massnahmen', true),
        new TransferSet('arp_agglomerationsprogramme_pub_agglomrtnsprgrmme_massnahme_punkt.sql',
            'arp_agglomerationsprogramme_pub_v2.agglomrtnsprgrmme_massnahme_punkt', true),
        new TransferSet('arp_agglomerationsprogramme_pub_agglomrtnsprgrmme_massnahme_linie.sql',
            'arp_agglomerationsprogramme_pub_v2.agglomrtnsprgrmme_massnahme_linie', true),		
        new TransferSet('arp_agglomerationsprogramme_pub_agglomrtnsprgrmme_massnahme_flaeche.sql',
            'arp_agglomerationsprogramme_pub_v2.agglomrtnsprgrmme_massnahme_flaeche', true),		
        new TransferSet('arp_agglomerationsprogramme_pub_agglomrtnsprgrmme_uebersicht_gemeinde.sql',
            'arp_agglomerationsprogramme_pub_v2.agglomrtnsprgrmme_uebersicht_gemeinde', true)				
    ];
}

task publipub(type: Publisher, dependsOn:'transferArpAggloprogramme'){
  dataIdent = "ch.so.arp.agglomerationsprogramme"
  userFormats = true
  database = [dbUriPub,dbUserPub,dbPwdPub]
  dbSchema = "arp_agglomerationsprogramme_pub_v2"
  modelsToPublish = "SO_Agglomerationsprogramme_Publikation_GDI_20230317"

  target = ["sftp://$sftpServerSogis/$sftpUserSogis", sftpUserSogis, sftpPwdSogis]
  kgdiService = [simiMetadataServiceUrl, simiMetadataServiceUser, simiMetadataServicePwd]
  kgdiTokenService = [simiTokenServiceUrl, simiTokenServiceUser, simiTokenServicePwd]
  grooming = new File(file(projectDir).getParentFile(), "publisher_grooming.json")
  if (findProperty('ilivalidatorModeldir')) modeldir = "https://github.com/sogis/schema-jobs/tree/main/topics/arp_agglomerationsprogramme/schema_pub/; http://models.geo.admin.ch"
}
