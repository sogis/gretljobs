import ch.so.agi.gretl.tasks.*
import ch.so.agi.gretl.api.TransferSet

defaultTasks 'publipub'

task publiedit(type: Publisher){
  dataIdent = "ch.so.ags.religionsgemeinschaften.relational"
  database = [dbUriEdit, dbUserEdit, dbPwdEdit]
  dbSchema = "ags_religionsgemeinschaften_v1"
  modelsToPublish = "SO_AGS_Religionsgemeinschaften_20220422"

  target = ["sftp://$sftpServerSogis/$sftpUserSogis", sftpUserSogis, sftpPwdSogis]
  kgdiService = [simiMetadataServiceUrl, simiMetadataServiceUser, simiMetadataServicePwd]
  kgdiTokenService = [simiTokenServiceUrl, simiTokenServiceUser, simiTokenServicePwd]
  grooming = new File(file(projectDir).getParentFile(), "publisher_grooming.json")
  if (findProperty('ilivalidatorModeldir')) modeldir = ilivalidatorModeldir
}

task transferAgsReligionsgemeinschaften(type: Db2Db, dependsOn: 'publiedit'){
    sourceDb = [dbUriEdit, dbUserEdit, dbPwdEdit]
    targetDb = [dbUriPub, dbUserPub, dbPwdPub]
    transferSets = [
            new TransferSet('ags_religionsgemeinschaften_pub.sql', 'ags_religionsgemeinschaften_pub_v1.religionsgemeinschaft', true)
    ];
}

task publipub(type: Publisher, dependsOn:'transferAgsReligionsgemeinschaften'){
  dataIdent = "ch.so.ags.religionsgemeinschaften"
  userFormats = true
  database = [dbUriPub,dbUserPub,dbPwdPub]
  dbSchema = "ags_religionsgemeinschaften_pub_v1"
  modelsToPublish = "SO_AGS_Religionsgemeinschaften_Publikation_20220427"

  target = ["sftp://$sftpServerSogis/$sftpUserSogis", sftpUserSogis, sftpPwdSogis]
  kgdiService = [simiMetadataServiceUrl, simiMetadataServiceUser, simiMetadataServicePwd]
  kgdiTokenService = [simiTokenServiceUrl, simiTokenServiceUser, simiTokenServicePwd]
  grooming = new File(file(projectDir).getParentFile(), "publisher_grooming.json")
  if (findProperty('ilivalidatorModeldir')) modeldir = ilivalidatorModeldir
}
