pipeline {
    agent {
        kubernetes {
            inheritFrom env.NODE_LABEL ?: 'gretl'
            yamlMergeStrategy merge()
            yaml """
            spec:
              containers:
                - name: gretl
                  volumeMounts:
                    - name: gretl-tmp-volume
                      mountPath: /tmp
                      subPath: gretl/${env.JOB_BASE_NAME}
              volumes:
                - name: gretl-tmp-volume
                  persistentVolumeClaim:
                    claimName: ${env.OPENSHIFT_PROJECT_NAME}-lowback
"""
        }
    }
    options {
        timeout(time: 6, unit: 'HOURS')
    }
    stages {
        stage('Run GRETL job') {
            steps {
                git url: "${env.GIT_REPO_URL}", branch: "${params.BRANCH ?: 'main'}", changelog: false
                container('gretl') {
                    dir(env.JOB_BASE_NAME) {
                        sh 'gretl'
                    }
                }
            }
        }
    }
    post {
        unsuccessful {
            emailext (
                to: "${currentBuild.getBuildCauses()[0]._class == 'hudson.model.Cause$UserIdCause' ? emailextrecipients([requestor()]) : '$DEFAULT_RECIPIENTS'}",
                subject: "GRETL-Job ${JOB_NAME} (${BUILD_DISPLAY_NAME}) ist fehlgeschlagen",
                body: "Die Ausf√ºhrung des GRETL-Jobs ${JOB_NAME} (${BUILD_DISPLAY_NAME}) war nicht erfolgreich. Details dazu finden Sie in den Log-Meldungen unter ${RUN_DISPLAY_URL}."
            )
        }
    }
}
