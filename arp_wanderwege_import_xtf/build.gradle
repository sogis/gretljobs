import ch.so.agi.gretl.api.TransferSet
import ch.so.agi.gretl.tasks.*
import java.nio.file.Paths
import de.undercouch.gradle.tasks.download.Download

apply plugin: 'de.undercouch.download'
apply plugin: 'ch.so.agi.gretl'


defaultTasks 'importWanderwegeEdit'

def pathToTempFolder = System.getProperty('java.io.tmpdir')
def pathToUnzipFolder = Paths.get(pathToTempFolder, 'unzip_data')
def pathToDataZip = Paths.get(pathToTempFolder, "uploadFile.zip")
def xtfFilePath = Paths.get(pathToUnzipFolder.toString(), InterlisFile)

task copyZipFile(type: Copy) {
    from 'upload/'
    include('uploadFile')
    into pathToTempFolder
    rename('uploadFile', 'uploadFile.zip')
}

task unzipData(type: Copy, dependsOn: copyZipFile) {
    doLast {
        println "File unzipped to directory: " + pathToUnzipFolder
    }
    from zipTree(pathToDataZip)
    into file(pathToUnzipFolder)
}

task filetransform(type: XslTransformer, dependsOn: unzipData) {
    description = "KÃ¼rzt die 'touristic_route_number' auf 10 Zeichen"
    xslFile = "touristicroutenumbertrafo.xsl"
    xmlFile = file(xtfFilePath)
    outDirectory = file(".")
}

task importKataloge(type: Ili2pgReplace, dependsOn: filetransform) {
    description = 'Import der Kataloge'
    database = [dbUriEdit, dbUserEdit, dbPwdEdit]
    dbschema = 'arp_wanderwege_v1'
    models = 'hpm_network_V1'
    dataFile = file(xtfFilePath)
    dataset = 'Hpm_Catalogues_V1.xml'
    importTid = true
    importBid = true
}

task importWanderwegeEdit(type: Ili2pgReplace, dependsOn: importKataloge) {
    description = 'Import der Wanderwege aus MISTRA in die Edit-DB'
    database = [dbUriEdit, dbUserEdit, dbPwdEdit]
    dbschema = 'arp_wanderwege_v1'
    models = 'hpm_network_V1'
    dataFile = 'upload/LV_Hpm_Network_V1.xtf'
    dataset = 'LV_Hpm_Network_V1.xtf'
    importTid = true
    importBid = true
    disableValidation = true                     // es sind noch Geometrie-Fehler im XTF
}
