import ch.so.agi.gretl.tasks.*
import ch.so.agi.gretl.api.TransferSet

apply plugin: 'ch.so.agi.gretl'

defaultTasks 'updateEnums', 'refreshSolr', 'updateSearchIndex_1', 'updateSearchIndex_2', 'updateSearchIndex_3', 'updateSearchIndex_4', 'updateSearchIndex_5', 'updateSearchIndex_6', 'updateSearchIndex_7', 'updateSearchIndex_8', 'updateSearchIndex_9', 'updateSearchIndex_10', 'updateSearchIndex_11', 'updateSearchIndex_12', 'updateSearchIndex_13', 'updateSearchIndex_14'

task transferAfuWasserbewirtschaftung(type: Db2Db){
    sourceDb = [dbUriEdit, dbUserEdit, dbPwdEdit]
    targetDb = [dbUriPub, dbUserPub, dbPwdPub]
    transferSets = [
            new TransferSet('afu_wasserbewirtschaftung_fassung_pub.sql', 'afu_wasserbewirtschaftung_pub_v2.wassrbwrtschftung_fassung', true),
            new TransferSet('afu_wasserbewirtschaftung_grundwassereinbauten_pub.sql', 'afu_wasserbewirtschaftung_pub_v2.wassrbwrtschftung_grundwassereinbau', true),
            new TransferSet('afu_wasserbewirtschaftung_grundwasserwaermepumpen_entnahmeschacht_pub.sql', 'afu_wasserbewirtschaftung_pub_v2.wassrbwrtschftung_grundwasserwaermepumpen_entnahmeschacht', true),
            new TransferSet('afu_wasserbewirtschaftung_quellen_pub.sql', 'afu_wasserbewirtschaftung_pub_v2.wassrbwrtschftung_quelle', true),
            new TransferSet('afu_wasserbewirtschaftung_trinkwasserobjekte_pub.sql', 'afu_wasserbewirtschaftung_pub_v2.wassrbwrtschftung_trinkwasserversorgung', true)
    ];
}

task updateEnums(type: SqlExecutor){
    dependsOn 'transferAfuWasserbewirtschaftung'
    database = [dbUriPub, dbUserPub, dbPwdPub]
    sqlFiles = ['update_enums.sql']
}

task refreshSolr(type:Exec) {
    mustRunAfter 'updateEnums'
    commandLine 'curl', '-i', '--max-time', '20', solrIndexupdaterBaseUrl +
        '/queue?ds=ch.so.afu.gewaesserschutz.quellen,ch.so.afu.wasserbewirtschaftung.quellen,ch.so.afu.gewaesserschutz.fassungen,ch.so.afu.wasserbewirtschaftung.fassung,ch.so.afu.wasserbewirtschaftung.sondierung,ch.so.afu.wasserbewirtschaftung.versickerungsschacht,ch.so.afu.wasserbewirtschaftung.grundwasserwaermenutzung,ch.so.afu.wasserbewirtschaftung.trinkwasserversorgung_geschuetzt,ch.so.afu.wasserbewirtschaftung.weitere_einbauten_geschuetzt,ch.so.afu.wasserbewirtschaftung.quellen_geschuetzt,ch.so.afu.wasserbewirtschaftung.sondierung_geschuetzt,ch.so.afu.wasserbewirtschaftung.fassung_geschuetzt,ch.so.afu.wasserbewirtschaftung.versickerungsschacht_geschuetzt,ch.so.afu.wasserbewirtschaftung.grundwasserwaermenutzung_geschuetzt'
}

task updateSearchIndex_1(type: SqlExecutor){
    mustRunAfter 'updateEnums'
    def layerName = 'ch.so.afu.gewaesserschutz.quellen'

    database = [dbUriPub, dbUserPub, dbPwdPub]
    def dbSearchSchema = dbSearchSchemaPub

    String layerNameString = "'${layerName}'"
    sqlParameters = [
            [layername: layerNameString, db_schema: dbSearchSchema]
    ]
    sqlFiles = [
            '../searchindex_deleteFeatures.sql',
            'searchindex_ch.so.afu.wasserbewirtschaftung.quellen.sql'   //<<< special
    ]
    doFirst {
        println 'layer name: ' + layerName
    }
}

task updateSearchIndex_2(type: SqlExecutor){
    mustRunAfter 'updateEnums'
    def layerName = 'ch.so.afu.wasserbewirtschaftung.quellen'

    database = [dbUriPub, dbUserPub, dbPwdPub]
    def dbSearchSchema = dbSearchSchemaPub

    String layerNameString = "'${layerName}'"
    sqlParameters = [
            [layername: layerNameString, db_schema: dbSearchSchema]
    ]
    sqlFiles = [
            '../searchindex_deleteFeatures.sql',
            'searchindex_' + layerName + '.sql'
    ]
    doFirst {
        println 'layer name: ' + layerName
    }

}

task updateSearchIndex_3(type: SqlExecutor){
    mustRunAfter 'updateEnums'
    def layerName = 'ch.so.afu.gewaesserschutz.fassungen'

    database = [dbUriPub, dbUserPub, dbPwdPub]
    def dbSearchSchema = dbSearchSchemaPub

    String layerNameString = "'${layerName}'"
    sqlParameters = [
            [layername: layerNameString, db_schema: dbSearchSchema]
    ]
    sqlFiles = [
            '../searchindex_deleteFeatures.sql',
            'searchindex_ch.so.afu.wasserbewirtschaftung.fassung.sql'   //<<< special
    ]
    doFirst {
        println 'layer name: ' + layerName
    }
}

task updateSearchIndex_4(type: SqlExecutor){
    mustRunAfter 'updateEnums'
    def layerName = 'ch.so.afu.wasserbewirtschaftung.fassung'

    database = [dbUriPub, dbUserPub, dbPwdPub]
    def dbSearchSchema = dbSearchSchemaPub

    String layerNameString = "'${layerName}'"
    sqlParameters = [
            [layername: layerNameString, db_schema: dbSearchSchema]
    ]
    sqlFiles = [
            '../searchindex_deleteFeatures.sql',
            'searchindex_' + layerName + '.sql'
    ]
    doFirst {
        println 'layer name: ' + layerName
    }
}

task updateSearchIndex_5(type: SqlExecutor){
    mustRunAfter 'updateEnums'
    def layerName = 'ch.so.afu.wasserbewirtschaftung.sondierung'

    database = [dbUriPub, dbUserPub, dbPwdPub]
    def dbSearchSchema = dbSearchSchemaPub

    String layerNameString = "'${layerName}'"
    sqlParameters = [
            [layername: layerNameString, db_schema: dbSearchSchema]
    ]
    sqlFiles = [
            '../searchindex_deleteFeatures.sql',
            'searchindex_' + layerName + '.sql'
    ]
    doFirst {
        println 'layer name: ' + layerName
    }
}

task updateSearchIndex_6(type: SqlExecutor){
    mustRunAfter 'updateEnums'
    def layerName = 'ch.so.afu.wasserbewirtschaftung.versickerungsschacht'

    database = [dbUriPub, dbUserPub, dbPwdPub]
    def dbSearchSchema = dbSearchSchemaPub

    String layerNameString = "'${layerName}'"
    sqlParameters = [
            [layername: layerNameString, db_schema: dbSearchSchema]
    ]
    sqlFiles = [
            '../searchindex_deleteFeatures.sql',
            'searchindex_' + layerName + '.sql'
    ]
    doFirst {
        println 'layer name: ' + layerName
    }
}

task updateSearchIndex_7(type: SqlExecutor){
    mustRunAfter 'updateEnums'
    def layerName = 'ch.so.afu.wasserbewirtschaftung.grundwasserwaermenutzung'

    database = [dbUriPub, dbUserPub, dbPwdPub]
    def dbSearchSchema = dbSearchSchemaPub

    String layerNameString = "'${layerName}'"
    sqlParameters = [
            [layername: layerNameString, db_schema: dbSearchSchema]
    ]
    sqlFiles = [
            '../searchindex_deleteFeatures.sql',
            'searchindex_' + layerName + '.sql'
    ]
    doFirst {
        println 'layer name: ' + layerName
    }
}

task updateSearchIndex_8(type: SqlExecutor){
    mustRunAfter 'updateEnums'
    def layerName = 'ch.so.afu.wasserbewirtschaftung.trinkwasserversorgung_geschuetzt'

    database = [dbUriPub, dbUserPub, dbPwdPub]
    def dbSearchSchema = dbSearchSchemaPub

    String layerNameString = "'${layerName}'"
    sqlParameters = [
            [layername: layerNameString, db_schema: dbSearchSchema]
    ]
    sqlFiles = [
            '../searchindex_deleteFeatures.sql',
            'searchindex_' + layerName + '.sql'
    ]
    doFirst {
        println 'layer name: ' + layerName
    }
}

task updateSearchIndex_9(type: SqlExecutor){
    mustRunAfter 'updateEnums'
    def layerName = 'ch.so.afu.wasserbewirtschaftung.weitere_einbauten_geschuetzt'

    database = [dbUriPub, dbUserPub, dbPwdPub]
    def dbSearchSchema = dbSearchSchemaPub

    String layerNameString = "'${layerName}'"
    sqlParameters = [
            [layername: layerNameString, db_schema: dbSearchSchema]
    ]
    sqlFiles = [
            '../searchindex_deleteFeatures.sql',
            'searchindex_' + layerName + '.sql'
    ]
    doFirst {
        println 'layer name: ' + layerName
    }
}

task updateSearchIndex_10(type: SqlExecutor){
    mustRunAfter 'updateEnums'
    def layerName = 'ch.so.afu.wasserbewirtschaftung.quellen_geschuetzt'

    database = [dbUriPub, dbUserPub, dbPwdPub]
    def dbSearchSchema = dbSearchSchemaPub

    String layerNameString = "'${layerName}'"
    sqlParameters = [
            [layername: layerNameString, db_schema: dbSearchSchema]
    ]
    sqlFiles = [
            '../searchindex_deleteFeatures.sql',
            'searchindex_' + layerName + '.sql'
    ]
    doFirst {
        println 'layer name: ' + layerName
    }
}

task updateSearchIndex_11(type: SqlExecutor){
    mustRunAfter 'updateEnums'
    def layerName = 'ch.so.afu.wasserbewirtschaftung.sondierung_geschuetzt'

    database = [dbUriPub, dbUserPub, dbPwdPub]
    def dbSearchSchema = dbSearchSchemaPub

    String layerNameString = "'${layerName}'"
    sqlParameters = [
            [layername: layerNameString, db_schema: dbSearchSchema]
    ]
    sqlFiles = [
            '../searchindex_deleteFeatures.sql',
            'searchindex_' + layerName + '.sql'
    ]
    doFirst {
        println 'layer name: ' + layerName
    }
}

task updateSearchIndex_12(type: SqlExecutor){
    mustRunAfter 'updateEnums'
    def layerName = 'ch.so.afu.wasserbewirtschaftung.fassung_geschuetzt'

    database = [dbUriPub, dbUserPub, dbPwdPub]
    def dbSearchSchema = dbSearchSchemaPub

    String layerNameString = "'${layerName}'"
    sqlParameters = [
            [layername: layerNameString, db_schema: dbSearchSchema]
    ]
    sqlFiles = [
            '../searchindex_deleteFeatures.sql',
            'searchindex_' + layerName + '.sql'
    ]
    doFirst {
        println 'layer name: ' + layerName
    }
}

task updateSearchIndex_13(type: SqlExecutor){
    mustRunAfter 'updateEnums'
    def layerName = 'ch.so.afu.wasserbewirtschaftung.versickerungsschacht_geschuetzt'

    database = [dbUriPub, dbUserPub, dbPwdPub]
    def dbSearchSchema = dbSearchSchemaPub

    String layerNameString = "'${layerName}'"
    sqlParameters = [
            [layername: layerNameString, db_schema: dbSearchSchema]
    ]
    sqlFiles = [
            '../searchindex_deleteFeatures.sql',
            'searchindex_' + layerName + '.sql'
    ]
    doFirst {
        println 'layer name: ' + layerName
    }
}

task updateSearchIndex_14(type: SqlExecutor){
    mustRunAfter 'updateEnums'
    def layerName = 'ch.so.afu.wasserbewirtschaftung.grundwasserwaermenutzung_geschuetzt'

    database = [dbUriPub, dbUserPub, dbPwdPub]
    def dbSearchSchema = dbSearchSchemaPub

    String layerNameString = "'${layerName}'"
    sqlParameters = [
            [layername: layerNameString, db_schema: dbSearchSchema]
    ]
    sqlFiles = [
            '../searchindex_deleteFeatures.sql',
            'searchindex_' + layerName + '.sql'
    ]
    doFirst {
        println 'layer name: ' + layerName
    }
}
