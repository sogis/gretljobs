import ch.so.agi.gretl.tasks.*
import ch.so.agi.gretl.api.TransferSet

apply plugin: 'ch.so.agi.gretl'

defaultTasks 'betriebe_fehlende_koordinaten_ergaenzen'

def DB_Schema_QRcat = "afu_qrcat_v1"

task transfer_onlinerisk(type: Db2Db){
    description = "Übertrag benötigte OnlineRisk-Daten aus AIO PostgreSQL-Datenbank"
    sourceDb = [dbUriOnlinerisk, dbUserOnlinerisk, dbPwdOnlinerisk]
    targetDb = [dbUriEdit, dbUserEdit, dbPwdEdit]
    transferSets = [
            new TransferSet('betrieb.sql', 'afu_qrcat_v1.onlinerisk_betrieb', true, (String[])["geometrie:wkt:2056"]),
            new TransferSet('untersuchungseinheit.sql', 'afu_qrcat_v1.onlinerisk_untersuchungseinheit', true, (String[])["geometrie:wkt:2056"]),
            new TransferSet('gebaeude.sql', 'afu_qrcat_v1.onlinerisk_gebaeude', true, (String[])["geometrie:wkt:2056"]),
            new TransferSet('bereich.sql', 'afu_qrcat_v1.onlinerisk_bereich', true),
            new TransferSet('stoff.sql', 'afu_qrcat_v1.onlinerisk_stoff', true),
            new TransferSet('stoff_in_bereich.sql', 'afu_qrcat_v1.onlinerisk_stoff_in_bereich', true)
    ];
}

task "betriebe_fehlende_koordinaten_ergaenzen"(type: SqlExecutor,dependsOn: "transfer_onlinerisk") {
    description = "Bei den Betrieben gibt es fehlende Koordinaten die wir versuchen aus den verbundenen Tabellen zu ergänzen."
    database = [dbUriEdit, dbUserEdit, dbPwdEdit]
    sqlParameters = [DB_Schema_QRcat:DB_Schema_QRcat]
    sqlFiles = ['update_fehlende_koordinaten_betrieb.sql']
}
