
// Macht ein Export aus der Edit-DB und ein Import in die Pub-DB. Übergnagsfrist, d.h. der GRETL-Job kann gelöscht werden sobald alle Daten der Nutzungsplanung digital vorliegen.


import ch.so.agi.gretl.tasks.*
import ch.so.agi.gretl.api.TransferSet

apply plugin: 'ch.so.agi.gretl'

defaultTasks 'importXTF_pub'


task exportDataEdit (type: Ili2pgExport) {
    description = "Exportiert die Daten aus dem Schema arp_nutzungsplanung_digizone in eine INTERLIS-Datei."
    database = [dbUriEdit, dbUserEdit, dbPwdEdit]
    dbschema = 'arp_nutzungsplanung_digizone_v1'
    models = 'SO_ARP_Nutzungsplanung_Publikation_20201005'
    dataFile= file("digizone.xtf")
    disableValidation = true
}

task validateDataEdit(type: IliValidator, dependsOn: 'exportDataEdit') {
    description = "Validiert die exportierten INTERLIS-Datei gegen das Modell."
    dataFiles = file("digizone.xtf")
    if (findProperty('ilivalidatorModeldir')) modeldir = ilivalidatorModeldir
    failOnError = true
}

task importXTF_pub(type: Ili2pgReplace, dependsOn: 'validateDataEdit') {
    description = 'Import der INTERLIS-Datei "Digizone" in das Schema arp_nutzungsplanung_pub.'
    database = [dbUriPub, dbUserPub, dbPwdPub]
    dbschema = 'arp_nutzungsplanung_pub_v1'
    models = 'SO_ARP_Nutzungsplanung_Publikation_20201005'
    dataset = 'digizone'
    dataFile = file("digizone.xtf")
    disableValidation = true
}
