import ch.so.agi.gretl.tasks.*
import ch.so.agi.gretl.api.TransferSet

apply plugin: 'ch.so.agi.gretl'

defaultTasks 'copyFromBohrprofil'

def edit = [dbUriEdit, dbUserEdit, dbPwdEdit]
def pub = [dbUriPub, dbUserPub, dbPwdPub]

task deleteStageObjects(type: SqlExecutor){
    description = 'Leert die Tabellem im Schema afu_ewsabfrage_2d_staging_v1'
    database = edit
    sqlFiles = ['deleteStageObjects.sql']
}

task copyFromEwsabfrage2d(type: Db2Db, dependsOn: deleteStageObjects){
    description = 'Importiert die Attributdaten aus dem Schema afu_ewsabfrage_2d_v1'
    sourceDb = edit
    targetDb = edit
    transferSets = [
        new TransferSet('copy2stage/ewsabfrage_tiefenbeschraenkung.sql', 'afu_ewsabfrage_2d_staging_v1.tiefenbeschraenkung', false),
        new TransferSet('copy2stage/abklaerung.sql', 'afu_ewsabfrage_2d_staging_v1.abklaerung', false)
    ]
}

task copyFromMopublic_grundstueck(type: Db2Db, dependsOn: copyFromEwsabfrage2d){
    description = 'Importiert die Attributdaten aus dem Schema agi_mopublic_pub'
    sourceDb = pub
    targetDb = edit
    transferSets = [
        new TransferSet('copy2stage/mopublic_grundstueck.sql', 'afu_ewsabfrage_2d_staging_v1.grundstueck', false)
    ]
}

# innerhalb Grundwasserschutzzone oder -areal
task copyFromGewaesserschutz(type: Db2Db, dependsOn: copyFromMopublic_grundstueck){
    description = 'Importiert die Attributdaten aus dem Schema afu_gewaesserschutz_pub_v1'
    sourceDb = pub
    targetDb = edit
    transferSets = [
        new TransferSet('copy2stage/gewaesserschutz_schutzareal.sql', 'afu_ewsabfrage_2d_staging_v1.tiefenbeschraenkung', false),
        new TransferSet('copy2stage/gewaesserschutz_schutzzone.sql', 'afu_ewsabfrage_2d_staging_v1.tiefenbeschraenkung', false)    ]
}

# innerhalb belastetem Standort
task copyFromBelasteter_standort(type: Db2Db, dependsOn: copyFromGewaesserschutz){
    description = 'Importiert die Attributdaten aus dem Schema afu_altlasten_pub_v2'
    sourceDb = pub
    targetDb = edit
    transferSets = [
        new TransferSet('copy2stage/belasteter_standort.sql', 'afu_ewsabfrage_2d_staging_v1.abklaerung', false)
    ]
}

# innerhalb tiefgründigen Rutschungen
task copyFromRutschung_tief(type: Db2Db, dependsOn: copyFromBelasteter_standort){
    description = 'Importiert die Attributdaten aus dem Schema awjf_naturgefahrenhinweiskarte_pub_v1'
    sourceDb = pub
    targetDb = edit
    transferSets = [
        new TransferSet('copy2stage/rutschung_tief.sql', 'afu_ewsabfrage_2d_staging_v1.abklaerung', false)
    ]
}

# innerhalb Gewässerraum
task copyFromOekomorphologie(type: Db2Db, dependsOn: copyFromRutschung_tief){
    description = 'Importiert die Attributdaten aus dem Schema afu_gewaesser_oekomorphologie_pub_v1'
    sourceDb = pub
    targetDb = edit
    transferSets = [
        new TransferSet('copy2stage/oekomorphologie.sql', 'afu_ewsabfrage_2d_staging_v1.abklaerung', false)
    ]
}

# innerhalb Grundwasservorkommen
task copyFromGrundwasserstrom_begrenzung_hgw(type: Db2Db, dependsOn: copyFromAbklaerung){
    description = 'Importiert die Attributdaten aus dem Schema afu_gewaesser_oekomorphologie_pub_v1'
    sourceDb = pub
    targetDb = edit
    transferSets = [
        new TransferSet('copy2stage/grundwasserstrom_begrenzung_hgw.sql', 'afu_ewsabfrage_2d_staging_v1.hinweis', false)
    ]
}

task copyFromBohrprofil(type: Db2Db, dependsOn: copyFromGrundwasserstrom_begrenzung_hgw){
    description = 'Importiert die Attributdaten aus dem Schema afu_grundlagendaten_ews_v1'
    sourceDb = edit
    targetDb = edit
    transferSets = [
        new TransferSet('copy2stage/bohrprofil.sql', 'afu_ewsabfrage_2d_staging_v1.hinweis', false)
    ]
}

