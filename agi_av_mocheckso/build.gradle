import ch.so.agi.gretl.tasks.*
import ch.so.agi.gretl.api.TransferSet
import ch.so.agi.gretl.util.TaskUtil
import java.nio.file.Paths
import java.nio.file.Files
import java.io.FileOutputStream
import org.apache.commons.net.ftp.*

defaultTasks 'transferDataPub'

def pathToTempFolder = System.getProperty("java.io.tmpdir")
def localFileName = "mocheckso_errors.csv"

task downloadCsv(type: FtpDownload){
    server = ftpServerInfogrips
    user = ftpUserInfogrips
    password = ftpPwdInfogrips
    systemType = "WINDOWS"
    localDir = pathToTempFolder
    remoteDir = "\\DM01AVSO24LV95\\ERROR"
    remoteFile = "mocheckso_errors.csv"

    // Bug in ehibasics: https://github.com/claeis/ehibasics/commit/e231dc9583b4d1f9d08352c51486ae60ab408021
    // Achtung: Das gesamte File wird in den Memory gelesen.
    doLast {
        def fileContent = new File(pathToTempFolder.toString()+"/mocheckso_errors.csv").getText('windows-1252')
        new File(pathToTempFolder.toString()+"/mocheckso_errors_semicolon.csv").write(fileContent.replace("\t",";"),'utf-8')
    }
}

task validateCsv(type: CsvValidator, dependsOn: 'downloadCsv') {
    description = "Validiert die heruntergeladene CSV-Datei (Tabs ersetzt mit Semikolon)"
    models = "SO_AGI_MOCheckSO_20200715"
    if (findProperty('ilivalidatorModeldir')) modeldir = ilivalidatorModeldir
    firstLineIsHeader = true
    valueDelimiter = null
    valueSeparator = ';'
    encoding = "UTF-8"
    dataFiles = [pathToTempFolder.toString()+"/mocheckso_errors_semicolon.csv"]
}

task truncateTable(type: SqlExecutor, dependsOn: 'validateCsv') {
    description = "Leert die Tabelle agi_av_mocheckso.mocheckso_errors_mocheckso_error"
    database = [dbUriEdit, dbUserEdit, dbPwdEdit]
    sqlFiles = [
            'truncate_table.sql'
    ]
}

task importCsv(type: CsvImport, dependsOn: 'truncateTable') {
    database = [dbUriEdit, dbUserEdit, dbPwdEdit]
    schemaName = "agi_av_mocheckso"
    tableName = "mocheckso_errors_mocheckso_error"
    firstLineIsHeader = true
    valueDelimiter = null
    valueSeparator = ';'
    encoding = "UTF-8"
    dataFile = file(pathToTempFolder.toString()+"/mocheckso_errors_semicolon.csv")
}

task transferDataPub(type: Db2Db, dependsOn: 'importCsv') {
    sourceDb = [dbUriEdit, dbUserEdit, dbPwdEdit]
    targetDb = [dbUriPub, dbUserPub, dbPwdPub]
    transferSets = [
            new TransferSet('agi_av_validierung_pub.sql', 'agi_av_validierung_pub.errorlog_error', true)
    ];
}
