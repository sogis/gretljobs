import ch.so.agi.gretl.tasks.*
import ch.so.agi.gretl.api.TransferSet

apply plugin: 'ch.so.agi.gretl'

def schemaNameEdit = "afu_karst_v1"
def schemaNamePub = "afu_karst_pub_v1"
def iliModelName = "SO_AFU_Karst_Publikation_20241203"

defaultTasks "pubFiles"

task transferToPub(type: Db2Db){
    sourceDb = [dbUriEdit, dbUserEdit, dbPwdEdit]
    targetDb = [dbUriPub, dbUserPub, dbPwdPub]
    sqlParameters = [dbSchema:schemaNameEdit]
    transferSets = [
        new TransferSet('allogene_gebiete.sql', schemaNamePub + '.karst_allogene_gebiete', true),
        new TransferSet('felsueberdeckung.sql', schemaNamePub + '.karst_felsueberdeckung', true),
        new TransferSet('verkarstung.sql', schemaNamePub + '.karst_verkarstung', true),
        new TransferSet('subartesische_zone.sql', schemaNamePub + '.karst_subartesische_zone', true)
    ]
}

task pubFiles(type: Publisher, dependsOn: transferToPub){
    database = [dbUriPub, dbUserPub, dbPwdPub]
    dataIdent = "ch.so.afu.karst"
    dbSchema = schemaNamePub
    modelsToPublish = iliModelName
    userFormats = true
    //target = [file("$buildDir")]
    target = [sftpUrlSogis, sftpUserSogis, sftpPwdSogis]
    kgdiService = [simiMetadataServiceUrl, simiMetadataServiceUser, simiMetadataServicePwd]
    kgdiTokenService = [simiTokenServiceUrl, simiTokenServiceUser, simiTokenServicePwd]
    grooming = new File(file(projectDir).getParentFile(), "publisher_grooming.json")
    if (findProperty('ilivalidatorModeldir')) modeldir = ilivalidatorModeldir
}