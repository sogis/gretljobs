import java.nio.file.Files
import java.nio.file.Paths
import java.io.File
import ch.so.agi.gretl.tasks.*
import ch.so.agi.gretl.api.TransferSet

apply plugin: 'ch.so.agi.gretl'

defaultTasks 'transferZonen'

task transferAfuGewaesserschutz(type: Db2Db){
    sourceDb = [dbUriEdit, dbUserEdit, dbPwdEdit]
    targetDb = [dbUriPub, dbUserPub, dbPwdPub]
    transferSets = [
            new TransferSet('gwsbereich.sql', 'afu_gewaesserschutz_pub.gewaesserschutz_bereich', true),
            new TransferSet('gwszone.sql', 'afu_gewaesserschutz_pub.gewaesserschutz_zone_areal', true),
            new TransferSet('gwsareal.sql', 'afu_gewaesserschutz_pub.gewaesserschutz_zone_areal', false) // false, da Zieltabelle identisch wie bei gwszone.sql
    ]
}

task transferSurroundingCantons(type: Db2Db, dependsOn:transferAfuGewaesserschutz){
    sourceDb = [dbUriSogis, dbUserSogis, dbPwdSogis]
    targetDb = [dbUriPub, dbUserPub, dbPwdPub]
    transferSets = [
            new TransferSet('sogis/aww_gszoak.sql', 'afu_gewaesserschutz_ausserkantonal_pub.aww_gszoak', true),
            new TransferSet('sogis/aww_gszustr.sql', 'afu_gewaesserschutz_ausserkantonal_pub.aww_gszustr', true)
    ]
}
task archiveData(type: SqlExecutor, dependsOn:transferSurroundingCantons){
    description = "Archiviert die Daten mit archiv=0 im Schema aww_gszoar"
    database = [dbUriSogis, dbUserSogis, dbPwdSogis]
    sqlFiles = ['aww_gszoar_status_archivierung.sql']
}
task transferZonen(type: Db2Db, dependsOn:archiveData){
    description = "Datenübernahme auf edit-DB für Nadelstich"
    sourceDb = [dbUriEdit, dbUserEdit, dbPwdEdit]
    targetDb = [dbUriSogis, dbUserSogis, dbPwdSogis]
    transferSets = [
            new TransferSet('aww_gszoar_zonen_areale.sql', 'public.aww_gszoar', false)
    ]
}
