plugins {
    id 'org.hidetake.ssh' version '2.9.0'
}

remotes {
    ftpServer {
        host = "${ftpServerZivilschutz}"
        user = "${ftpUserZivilschutz}"
        password = "${ftpPwdZivilschutz}"
    }
}

import ch.so.agi.gretl.tasks.*
import ch.so.agi.gretl.api.TransferSet

apply plugin: 'ch.so.agi.gretl'

def adressenDelete = 'amb_zivilschutz_adressen_staging_adressen_zivilschutz_delete.sql'
def adressenInsert = 'amb_zivilschutz_adressen_staging_adressen_zivilschutz.sql'
def csvFileName = "Adressen_Kanton_Solothurn_${new Date().format('yyyy-MM-dd')}.csv"

defaultTasks 'deleteFile'

task stageAdressenZivilschutz(type: SqlExecutor){
    database = [dbUriSogis, dbUserSogis, dbPwdSogis]
    sqlFiles = [adressenDelete, adressenInsert]
}

task exportAdressenZivilschutz(type: CsvExport, dependsOn: stageAdressenZivilschutz){
    database = [dbUriSogis, dbUserSogis, dbPwdSogis]
    schemaName = "amb_zivilschutz_adressen_staging"
    tableName = "adressen_zivilschutz"
    dataFile = csvFileName
    encoding = "UTF-8"
    // workaround f√ºr #139
    attributes = ["gemeinde","grundbuchkreis","grundstuecknummer","gwr_edid","gwr_egid","hausnummer","koord_nord","koord_ost","lokalisationsname","objektname","ortschaft","plz","status"]
}

task clearStaging(type: SqlExecutor, dependsOn: exportAdressenZivilschutz){
    database = [dbUriSogis, dbUserSogis, dbPwdSogis]
    sqlFiles = [adressenDelete]
}

task uploadFile (dependsOn: clearStaging){
    description = "Upload file to FTP server"    
    doLast {
        ssh.settings {
            knownHosts = allowAnyHosts
        }
        ssh.run {
            session(remotes.ftpServer) {
                put from: "${csvFileName}", into: "."
            }
        }
        println "File uploaded to FTP server"
    }
}

task deleteFile(type: Delete, dependsOn: uploadFile){
    delete "${csvFileName}"
}
