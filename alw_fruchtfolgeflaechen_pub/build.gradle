/* 
Der nachfolgende GRETL-Task publiziert die Fruchtfolgeflaechen (FFF) auf vielf√§ltige Art und Weise. 

1. Die Daten werden von der Edit-DB in die Pub-DB geschrieben. 
2. Die Daten aus der Pub-DB werden als xtf exportiert. 
3. Das xtf wird einmal mit Datum und einmal als "Latest" gezippt und auf S3 geladen 
4. Das xtf wird in ein Geopackage umgewandelt, gezippt und ebenfalls als "latest" auf S3 hochgeladen. 

*/
import ch.so.agi.gretl.tasks.*
import ch.so.agi.gretl.api.TransferSet
import java.text.SimpleDateFormat
import java.util.Date; 
import java.nio.file.Paths
import java.nio.file.Files

apply plugin: 'ch.so.agi.gretl'

defaultTasks 'publipub'

/*
Daten werden von der Edit in die Pub-DB geschrieben
*/
task fff_to_pub_db(type: Db2Db){
    sourceDb = [dbUriEdit, dbUserEdit, dbPwdEdit]
    targetDb = [dbUriPub, dbUserPub, dbPwdPub]
    transferSets = [
            new TransferSet('fff_to_pub_db.sql','alw_fruchtfolgeflaechen_pub_v1.fruchtfolgeflaeche', true)
    ];        

}

task statistik_to_pub_db(type: Db2Db, dependsOn:fff_to_pub_db){
    sourceDb = [dbUriEdit, dbUserEdit, dbPwdEdit]
    targetDb = [dbUriPub, dbUserPub, dbPwdPub]
    transferSets = [
            new TransferSet('fff_statistik.sql','alw_fruchtfolgeflaechen_pub_v1.statistik', true)
    ];        

}

task publipub(type: Publisher, dependsOn:'statistik_to_pub_db'){
  dataIdent = "ch.so.alw.fruchtfolgeflaechen"
  userFormats = true
  database = [dbUriPub,dbUserPub,dbPwdPub]
  dbSchema = "alw_fruchtfolgeflaechen_pub_v1"
  modelsToPublish = "SO_ALW_Fruchtfolgeflaechen_Publikation_20220110"

  target = ["sftp://$sftpServerSogis/$sftpUserSogis", sftpUserSogis, sftpPwdSogis]
  kgdiService = [simiMetadataServiceUrl, simiMetadataServiceUser, simiMetadataServicePwd]
  kgdiTokenService = [simiTokenServiceUrl, simiTokenServiceUser, simiTokenServicePwd]
  grooming = new File(file(projectDir).getParentFile(), "publisher_grooming.json")
  if (findProperty('ilivalidatorModeldir')) modeldir = ilivalidatorModeldir
}
