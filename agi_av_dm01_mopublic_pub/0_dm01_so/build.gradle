import ch.so.agi.gretl.tasks.*

rootProject.defaultTasks 'execAllProjAllTasks'

rootProject.ext.dm01SoDir = file("$buildDir/dm01_so/") // referenced from subprojects

def dm01SoDir = rootProject.ext.dm01SoDir
def dm01SoZippedDir = new File(dm01SoDir, 'zip')

task publish(type: Publisher){
    dataIdent = 'ch.so.agi.av.dm01_so'
    modelsToPublish = 'DM01AVSO24LV95'
    region = '.*'
    sourcePath = new File(dm01SoDir, 'dummy.itf')
    target = [file("$buildDir/published")]
    target = [sftpUrlSogis, sftpUserSogis, sftpPwdSogis]
    if (findProperty('ilivalidatorModeldir')) modeldir = ilivalidatorModeldir
    kgdiService = [simiMetadataServiceUrl, simiMetadataServiceUser, simiMetadataServicePwd]
    kgdiTokenService = [simiTokenServiceUrl, simiTokenServiceUser, simiTokenServicePwd]
    grooming = new File(file(rootDir).getParentFile(), "publisher_grooming.json")
    validationConfig = "$projectDir/../novalidation.toml"
}


task execAllPubTasks(){
    dependsOn ':2_mopublic:execProjPubTasks'
    dependsOn ':1_dm01_ch:execProjPubTasks'
    // Da 1_dm01_ch und 2_mopublic von 0_dm01_so abhängig sind, wird 0_dm01_so immer auch ausgeführt.
}

task execAllProjAllTasks(dependsOn: publish){}
