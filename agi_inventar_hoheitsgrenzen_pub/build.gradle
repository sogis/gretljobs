import ch.so.agi.gretl.tasks.*
import ch.so.agi.gretl.api.TransferSet

defaultTasks 'publipub'

task publiedit(type: Publisher){
  dataIdent = "ch.so.agi.av.inventar_kantonsgrenzzeichen.relational"
  database = [dbUriEdit, dbUserEdit, dbPwdEdit]
  dbSchema = "agi_inventar_hoheitsgrenzen"
  modelsToPublish = "SO_AGI_Inventar_Hoheitsgrenzen_20191129"

  target = [sftpUrlSogis, sftpUserSogis, sftpPwdSogis]
  kgdiService = [simiMetadataServiceUrl, simiMetadataServiceUser, simiMetadataServicePwd]
  kgdiTokenService = [simiTokenServiceUrl, simiTokenServiceUser, simiTokenServicePwd]
  grooming = new File(file(projectDir).getParentFile(), "publisher_grooming.json")
  if (findProperty('ilivalidatorModeldir')) modeldir = ilivalidatorModeldir
}

task transferAgiKantonsgrenzsteine(type: Db2Db, dependsOn:'publiedit'){
    sourceDb = [dbUriEdit, dbUserEdit, dbPwdEdit]
    targetDb = [dbUriPub, dbUserPub, dbPwdPub]
    transferSets = [
            new TransferSet('agi_inventar_hoheitsgrenzen_pub_kantonsgrenzstein.sql',
                            'agi_inventar_hoheitsgrenzen_pub.invntr_hhtsgrnzen_kantonsgrenzstein', true)
    ];
}

task publipub(type: Publisher, dependsOn:'transferAgiKantonsgrenzsteine'){
  dataIdent = "ch.so.agi.av.inventar_kantonsgrenzzeichen"
  userFormats = true
  database = [dbUriPub,dbUserPub,dbPwdPub]
  dbSchema = "agi_inventar_hoheitsgrenzen_pub"
  modelsToPublish = "SO_AGI_Inventar_Hoheitsgrenzen_Publikation_20191129"

  target = [sftpUrlSogis, sftpUserSogis, sftpPwdSogis]
  kgdiService = [simiMetadataServiceUrl, simiMetadataServiceUser, simiMetadataServicePwd]
  kgdiTokenService = [simiTokenServiceUrl, simiTokenServiceUser, simiTokenServicePwd]
  grooming = new File(file(projectDir).getParentFile(), "publisher_grooming.json")
  if (findProperty('ilivalidatorModeldir')) modeldir = ilivalidatorModeldir
}
