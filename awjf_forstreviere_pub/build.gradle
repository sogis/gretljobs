import ch.so.agi.gretl.tasks.*
import ch.so.agi.gretl.api.TransferSet

apply plugin: 'ch.so.agi.gretl'

defaultTasks 'publipub'

task publiedit(type: Publisher){
    dataIdent = "ch.so.awjf.forstreviere.relational"
    database = [dbUriEdit,dbUserEdit,dbPwdEdit]
    dbSchema = "awjf_forstreviere"
    modelsToPublish = "SO_Forstreviere_20170512"

    target = [sftpUrlSogis, sftpUserSogis, sftpPwdSogis]
    kgdiService = [simiMetadataServiceUrl, simiMetadataServiceUser, simiMetadataServicePwd]
    kgdiTokenService = [simiTokenServiceUrl, simiTokenServiceUser, simiTokenServicePwd]
    grooming = new File(file(projectDir).getParentFile(), "publisher_grooming.json")
    if (findProperty('ilivalidatorModeldir')) modeldir = ilivalidatorModeldir
}

task transferAwjfForstreviere(type: Db2Db, dependsOn: 'publiedit'){
    sourceDb = [dbUriEdit, dbUserEdit, dbPwdEdit]
    targetDb = [dbUriPub, dbUserPub, dbPwdPub]
    transferSets = [
            new TransferSet('awjf_forstreviere_pub_forstreviere_forstrevier.sql',
                    'awjf_forstreviere_pub.forstreviere_forstrevier', true),
            new TransferSet('awjf_forstreviere_pub_forstreviere_forstkreis.sql',
                    'awjf_forstreviere_pub.forstreviere_forstkreis', true)
    ];
}

task publipub(type: Publisher, dependsOn: 'transferAwjfForstreviere'){
    dataIdent = "ch.so.awjf.forstreviere"
    userFormats = true

    database = [dbUriPub,dbUserPub,dbPwdPub]
    dbSchema = "awjf_forstreviere_pub"
    modelsToPublish = "SO_Forstreviere_Publikation_20170428"

    target = [sftpUrlSogis, sftpUserSogis, sftpPwdSogis]
    kgdiService = [simiMetadataServiceUrl, simiMetadataServiceUser, simiMetadataServicePwd]
    kgdiTokenService = [simiTokenServiceUrl, simiTokenServiceUser, simiTokenServicePwd]
    grooming = new File(file(projectDir).getParentFile(), "publisher_grooming.json")
    if (findProperty('ilivalidatorModeldir')) modeldir = ilivalidatorModeldir
}

