import ch.so.agi.gretl.tasks.*
import ch.so.agi.gretl.api.TransferSet

apply plugin: 'ch.so.agi.gretl'

/*
COMPOSE_FILE=../gretljobs/docker-compose.yml docker compose run --rm -u $UID --workdir //home/gradle/schema-jobs/shared/schema \
gretl -PtopicName=afu_quellen_ungefasst -PschemaDirName=schema_staging dropSchema createSchema configureSchema

docker compose run --rm -u $UID gretl --project-dir=afu_quellen_ungefasst_csvimport
*/

def schemaNameStage = "afu_quellen_ungefasst_staging_v1"
def iliModelName = "SO_AFU_Quellen_ungefasst_20240131"

defaultTasks "appendToEditLayer"

task deleteCsvTableRows(type: SqlExecutor){
    database = [dbUriEdit, dbUserEdit, dbPwdEdit]
    sqlParameters = [dbSchema:schemaNameStage]
    sqlFiles = [
        'del_csv.sql'
    ]
}

task renameFile(type: Copy, dependsOn: deleteCsvTableRows) {
    from "upload/"
    into "upload/"
    include("uploadFile")
    rename("uploadFile", "uploadFile.csv")
}

task importCsv(type: CsvImport, dependsOn: renameFile) {
    database = [dbUriEdit, dbUserEdit, dbPwdEdit]
    schemaName = schemaNameStage
    tableName = 'csv_import'
    firstLineIsHeader = true
    valueSeparator = ','
    encoding = 'UTF-8'
    dataFile = file("csv_mod/uploadFile.csv")
}

task refineImport(type: SqlExecutor, dependsOn: importCsv){
    database = [dbUriEdit, dbUserEdit, dbPwdEdit]
    sqlParameters = [dbSchema:schemaNameStage]
    sqlFiles = [
        'update_sql/defaults.sql',
        'update_sql/dates.sql',
        'update_sql/domain.sql',
        'update_sql/geom_koord.sql',
        'update_sql/gemeinde.sql'
    ]
}

task validate(type: Ili2pgValidate, dependsOn: refineImport) {
    database = [dbUriEdit, dbUserEdit, dbPwdEdit]
    models = iliModelName
    if (findProperty('ilivalidatorModeldir')) modeldir = ilivalidatorModeldir
    dbschema = schemaNameStage
}

task appendToEditLayer(type: Db2Db, dependsOn: validate){
    sourceDb = [dbUriEdit, dbUserEdit, dbPwdEdit]
    targetDb = [dbUriEdit, dbUserEdit, dbPwdEdit]
    sqlParameters = [dbSchema:schemaNameStage]
    transferSets = [
        new TransferSet('copy_to_layer.sql', 'afu_quellen_ungefasst_v1.quelle_ungefasst', false)
    ]
}
