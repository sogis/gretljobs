
/*
buildscript {
  repositories {
    maven { url "http://jars.interlis.ch" }
    maven { url "http://download.osgeo.org/webdav/geotools/" }
    mavenCentral()
    jcenter()
    maven {  url "https://plugins.gradle.org/m2/" }
  }
  dependencies {
    classpath "ch.so.agi:gretl:2.0.162"
    classpath "de.undercouch:gradle-download-task:4.0.2"
  }
}
*/

import ch.so.agi.gretl.tasks.*
import ch.so.agi.gretl.api.TransferSet
import java.nio.file.Paths

apply plugin: 'ch.so.agi.gretl'
apply plugin: "de.undercouch.download"

defaultTasks "replaceCadastralSurveyingData"

def pathToTempFolder = System.getProperty("java.io.tmpdir")
def pathToUnzipFolder = Paths.get(pathToTempFolder, 'unzip_data')

def cadastralSurveyingBaseUrl = "https://s3.eu-central-1.amazonaws.com/ch.so.agi.av.dm01avso24lv95/"
def cadastralSurveyingDataSets = [2401,2402,2403,2404,2405,2406,2407,2408,2421,2422,2423,2424,2425,2426,2427,2428,2429,2445,2455,2456,2457,2461,2463,2464,2465,2471,2472,2473,2474,2475,2476,2477,2478,2479,2480,2481,2491,2492,2493,2495,2497,2498,2499,2500,2501,2502,2503,2511,2513,2514,2516,2517,2518,2519,2520,2523,2524,2525,2526,2527,2528,2529,2530,2532,2534,2535,2541,2542,2543,2544,2545,2546,2547,2548,2549,2550,2551,2553,2554,2555,2556,2571,2572,2573,2574,2575,2576,2578,2579,2580,2581,2582,2583,2584,2585,2586,2601,2611,2612,2613,2614,2615,2616,2617,2618,2619,2620,2621,2622]
//def cadastralSurveyingDataSets = ["2549"]
//def cadastralSurveyingDataSets = ["2401"]

cadastralSurveyingDataSets.each { cadastralSurveyingDataSet ->
    def dataSet = cadastralSurveyingDataSet.toString()
    task "downloadCadastralSurveyingData_$dataSet"(type: Download) {
        description = "Download AV-Datensatz: ${dataSet}"
        src cadastralSurveyingBaseUrl + dataSet + "00.itf"
        dest pathToTempFolder
        overwrite true

        doLast {
            println "File downloaded to: " + pathToTempFolder
            //Thread.sleep(600000)
        }        
    }

    task "replaceCadastralSurveyingData_$dataSet"(type: Ili2pgReplace, dependsOn: "downloadCadastralSurveyingData_$dataSet") {
        description = "Import AV-Datensatz: ${dataSet}"
        database = [dbUriEdit, dbUserEdit, dbPwdEdit]
        //database = ["jdbc:postgresql://localhost:54321/edit", "admin", "admin"]
        models = 'DM01AVSO24LV95'
        dbschema = 'agi_dm01avso24_strokearcs'
        dataFile = file(Paths.get(pathToTempFolder.toString(), dataSet + "00.itf"))
        //topics = "DM01AVCH24LV95D.Liegenschaften;DM01AVCH24LV95D.Gemeindegrenzen;DM01AVCH24LV95D.Gebaeudeadressen"
        dataset = dataSet
        disableValidation = true

        doLast {
            println "Data imported into db: " + dbUriEdit
        }        
    }
}

task replaceCadastralSurveyingData() {
    description = "Aggregationstask für das Importieren/Ersetzen sämtlicher AV-Daten."

    dependsOn {
        tasks.findAll { task -> task.name.startsWith('replaceCadastralSurveyingData_') }
    }    
}

