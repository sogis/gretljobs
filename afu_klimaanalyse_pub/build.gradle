import ch.so.agi.gretl.tasks.*
import ch.so.agi.gretl.api.TransferSet

apply plugin: 'ch.so.agi.gretl'


defaultTasks 'publishPub'


/*
task transferKlimaanalysePub(type: Db2Db) {
    sourceDb = [dbUriEdit, dbUserEdit, dbPwdEdit]
    targetDb = [dbUriPub, dbUserPub, dbPwdPub]
    transferSets = [
            new TransferSet('arbeitszone_ohne_wohnen_pub.sql', 'afu_klimaanalyse_pub_v1.arbeitszone_ohne_wohnen', true),
            new TransferSet('ausgangsgroessen_bewertung_pub.sql', 'afu_klimaanalyse_pub_v1.ausgangsgroessen_bewertung', true),
            new TransferSet('entwicklungsflaechen_pub.sql', 'afu_klimaanalyse_pub_v1.entwicklungsflaechen', true),
            new TransferSet('entwicklungsflaechen_agglopr_pub.sql', 'afu_klimaanalyse_pub_v1.entwicklungsflaechen_agglopr', true),
            new TransferSet('kaltluftbereich_ist_pub.sql', 'afu_klimaanalyse_pub_v1.kaltluftbereich_ist', true),
            new TransferSet('kaltluftbereich_zukunft_pub.sql', 'afu_klimaanalyse_pub_v1.kaltluftbereich_zukunft', true),
            new TransferSet('kaltluftentstehung_ist_pub.sql', 'afu_klimaanalyse_pub_v1.kaltluftentstehung_ist', true), 
            new TransferSet('kaltluftentstehung_zukunft_pub.sql', 'afu_klimaanalyse_pub_v1.kaltluftentstehung_zukunft', true),
            new TransferSet('kaltluftprozess_ist_pub.sql', 'afu_klimaanalyse_pub_v1.kaltluftprozess_ist', true),
            new TransferSet('kaltluftprozess_zukunft_pub.sql', 'afu_klimaanalyse_pub_v1.kaltluftprozess_zukunft', true)
    ];
}*/

/////////////////////////////////////////////////////////////////////////////////task publishPub(type: Publisher, dependsOn: 'transferKlimaanalysePub') {
task publishPub(type: Publisher) {
    database = [dbUriPub, dbUserPub, dbPwdPub]
    dataIdent = "ch.so.afu.klimaanalyse"
    dbSchema = "afu_klimaanalyse_pub_v1"
    modelsToPublish = "SO_AFU_Klimaanalyse_20230413"
    ///////////////////////////////////////////////////////////////////////////////////////////////userFormats = true
    target = ["sftp://$sftpServerSogis/$sftpUserSogis", 'anonymous-test', 'Ey_oophe2caeng']
    kgdiService = [simiMetadataServiceUrl, simiMetadataServiceUser, simiMetadataServicePwd]
    kgdiTokenService = [simiTokenServiceUrl, simiTokenServiceUser, simiTokenServicePwd]
    grooming = new File(file(projectDir).getParentFile(), "publisher_grooming.json")
    if (findProperty('ilivalidatorModeldir')) modeldir = ilivalidatorModeldir
}
