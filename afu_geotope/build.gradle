import ch.so.agi.gretl.tasks.*
import ch.so.agi.gretl.api.TransferSet

apply plugin: 'ch.so.agi.gretl'

defaultTasks 'transferAfuGeotopeLithostratigraphie', 'transferAfuGeotope'

task transferAfuGeotopeBasic(type: Db2Db){
    sourceDb = [dbUriPub, dbUserPub, dbPwdPub] //[dbUriSogis, dbUserSogis, dbPwdSogis]
    targetDb = [dbUriPub, dbUserPub, dbPwdPub]
    transferSets = [
            new TransferSet('afu_geotope_geotope_aufschluss.sql', 'afu_geotope.geotope_aufschluss', true), //Query bei geologisches System korrigieren
            new TransferSet('afu_geotope_geotope_erratiker.sql', 'afu_geotope.geotope_erratiker', true),
            new TransferSet('afu_geotope_geotope_hoehle.sql', 'afu_geotope.geotope_hoehle', true),
            new TransferSet('afu_geotope_geotope_quelle.sql', 'afu_geotope.geotope_quelle', true),
            new TransferSet('afu_geotope_geotope_landschaftsform.sql', 'afu_geotope.geotope_landschaftsform', true),
            new TransferSet('afu_geotope_geotope_fundstelle_grabung.sql', 'afu_geotope.geotope_fundstelle_grabung',
                    true),
            new TransferSet('afu_geotope_geotope_fachbereich.sql', 'afu_geotope.geotope_fachbereich', true),
            new TransferSet('afu_geotope_geotope_dokument.sql', 'afu_geotope.geotope_dokument', true)
    ]
}

task transferAfuGeotopeRelations(type: Db2Db){
    sourceDb = [dbUriPub, dbUserPub, dbPwdPub] //[dbUriSogis, dbUserSogis, dbPwdSogis]
    targetDb = [dbUriPub, dbUserPub, dbPwdPub]
    transferSets = [
            new TransferSet('afu_geotope_geotope_aufschluss_fachbereich.sql',
                    'afu_geotope.geotope_aufschluss_fachbereich', true),
            new TransferSet('afu_geotope_geotope_erratiker_fachbereich.sql',
                    'afu_geotope.geotope_erratiker_fachbereich', true),
            new TransferSet('afu_geotope_geotope_hoehle_fachbereich.sql', 'afu_geotope.geotope_hoehle_fachbereich',
                    true),
            new TransferSet('afu_geotope_geotope_quelle_fachbereich.sql', 'afu_geotope.geotope_quelle_fachbereich',
                    true),
            new TransferSet('afu_geotope_geotope_landform_fachbereich.sql', 'afu_geotope.geotope_landform_fachbereich',
                    true),
            new TransferSet('afu_geotope_geotope_fundstelle_grabung_fachbereich.sql',
                    'afu_geotope.geotope_fundstelle_grabung_fachbereich', true),
            new TransferSet('afu_geotope_geotope_aufschluss_dokument.sql', 'afu_geotope.geotope_aufschluss_dokument',
                    true),
            new TransferSet('afu_geotope_geotope_erratiker_dokument.sql', 'afu_geotope.geotope_erratiker_dokument',
                    true),
            new TransferSet('afu_geotope_geotope_hoehle_dokument.sql', 'afu_geotope.geotope_hoehle_dokument', true),
            new TransferSet('afu_geotope_geotope_quelle_dokument.sql', 'afu_geotope.geotope_quelle_dokument', true),
            new TransferSet('afu_geotope_geotope_landform_dokument.sql', 'afu_geotope.geotope_landform_dokument', true),
            new TransferSet('afu_geotope_geotope_fundstelle_grabung_dokument.sql',
                    'afu_geotope.geotope_fundstelle_grabung_dokument', true)

    ]
}

task transferAfuGeotope {
    dependsOn 'transferAfuGeotopeBasic'
    dependsOn 'transferAfuGeotopeRelations'

    tasks.findByName('transferAfuGeotopeRelations').mustRunAfter 'transferAfuGeotopeBasic'
}



task transferAfuGeotopeGeologischesSystem(type: Db2Db){
    sourceDb = [dbUriPub, dbUserPub, dbPwdPub] //[dbUriSogis, dbUserSogis, dbPwdSogis]
    targetDb = [dbUriPub, dbUserPub, dbPwdPub]
    transferSets = [
            new TransferSet('afu_geotope_lithostratigrphie_geologisches_system.sql',
                    'afu_geotope.lithostratigrphie_geologisches_system', true)
    ]
}

task transferAfuGeotopeGeologischeSerie(type: Db2Db){
    sourceDb = [dbUriPub, dbUserPub, dbPwdPub] //[dbUriSogis, dbUserSogis, dbPwdSogis]
    targetDb = [dbUriPub, dbUserPub, dbPwdPub]
    transferSets = [
            new TransferSet('afu_geotope_lithostratigrphie_geologische_serie.sql',
                    'afu_geotope.lithostratigrphie_geologische_serie', true)
    ]
}

task transferAfuGeotopeGeologischeStufe(type: Db2Db){
    sourceDb = [dbUriPub, dbUserPub, dbPwdPub] //[dbUriSogis, dbUserSogis, dbPwdSogis]
    targetDb = [dbUriPub, dbUserPub, dbPwdPub]
    transferSets = [
            new TransferSet('afu_geotope_lithostratigrphie_geologische_stufe.sql',
                    'afu_geotope.lithostratigrphie_geologische_stufe', true)
    ]
}

task transferAfuGeotopeGeologischeSchicht(type: Db2Db){
    sourceDb = [dbUriPub, dbUserPub, dbPwdPub] //[dbUriSogis, dbUserSogis, dbPwdSogis]
    targetDb = [dbUriPub, dbUserPub, dbPwdPub]
    transferSets = [
            new TransferSet('afu_geotope_lithostratigrphie_geologische_schicht.sql',
                    'afu_geotope.lithostratigrphie_geologische_schicht', true)
    ]
}

task transferAfuGeotopeLithostratigraphie {
    dependsOn 'transferAfuGeotopeGeologischesSystem'
    dependsOn 'transferAfuGeotopeGeologischeSerie'
    dependsOn 'transferAfuGeotopeGeologischeStufe'
    dependsOn 'transferAfuGeotopeGeologischeSchicht'

    tasks.findByName('transferAfuGeotopeGeologischeSchicht').mustRunAfter 'transferAfuGeotopeGeologischeStufe'
    tasks.findByName('transferAfuGeotopeGeologischeStufe').mustRunAfter 'transferAfuGeotopeGeologischeSerie'
    tasks.findByName('transferAfuGeotopeGeologischeSerie').mustRunAfter 'transferAfuGeotopeGeologischesSystem'
}