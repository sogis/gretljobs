import ch.so.agi.gretl.tasks.*
import ch.so.agi.gretl.api.TransferSet

import java.nio.file.Paths

defaultTasks "publishPub"

def tmpDir = buildDir.toString()
def xtfPath = tmpDir + "/data.xtf"

/*
task exportXtf(type: Ili2pgExport){
    database = [dbUriEdit, dbUserEdit, dbPwdEdit]
    dbschema = "avt_kunstbauten_staging_v1"
    disableValidation = true
    dataFile = xtfPath
    models = "SO_AVT_Kunstbauten_Publikation_20220207"
}

task validate(type: IliValidator, dependsOn: exportXtf){
    dataFiles = [xtfPath]
    if (findProperty('ilivalidatorModeldir')) modeldir = ilivalidatorModeldir
}

task writeToPub(type: Db2Db, dependsOn: validate){ 
    sourceDb = [dbUriEdit, dbUserEdit, dbPwdEdit]
    targetDb = [dbUriPub, dbUserPub, dbPwdPub]
    transferSets = [
        new TransferSet('kunstbaute.sql', 'avt_kunstbauten_pub_v1.kunstbaute', true)
    ];
}
*/

task publishPub1(type:Exec){//, dependsOn: writeToPub){
    doLast{
      println new File(file(projectDir).getParentFile(), "publisher_grooming.json")
    }

    workingDir file(projectDir).getParentFile()
    commandLine 'cat', 'publisher_grooming.json'
}

task publishPub2(type: Publisher){//, dependsOn: writeToPub){
    database = [dbUriPub, dbUserPub, dbPwdPub]
    dataIdent = "ch.so.avt.kunstbauten"
    dbSchema = "avt_kunstbauten_pub_v1"
    modelsToPublish = "SO_AVT_Kunstbauten_Publikation_20220207"
    userFormats = true
    target = ["sftp://$sftpServerSogis/$sftpUserSogis", sftpUserSogis, sftpPwdSogis]
    kgdiService = [simiMetadataServiceUrl, simiMetadataServiceUser, simiMetadataServiceUser]
    kgdiTokenService = [simiMetadataServiceUrl, simiMetadataServiceUser, simiMetadataServicePwd]
    grooming = new File(file(projectDir).getParentFile(), "publisher_grooming.json")
}

task publishPub(){
  dependsOn publishPub2
  dependsOn publishPub1
}

/*
export ORG_GRADLE_PROJECT_simiMetadataServiceUrl=http://localhost:8080/app/rest
export ORG_GRADLE_PROJECT_simiMetadataServiceUser=admin
export ORG_GRADLE_PROJECT_simiMetadataServicePwd=admin

export ORG_GRADLE_PROJECT_dbUriPub=***
export ORG_GRADLE_PROJECT_dbUserPub=***
export ORG_GRADLE_PROJECT_dbPwdPub=***

./start-gretl.sh --docker-image sogis/gretl:latest --docker-network host --job-directory $PWD -p avt_kunstbauten_pub
*/
