import ch.so.agi.gretl.api.TransferSet
import java.nio.file.Paths
import java.nio.file.Files
import ch.so.agi.gretl.tasks.*
import ch.so.agi.gretl.api.*
import de.undercouch.gradle.tasks.download.Download

apply plugin: 'ch.so.agi.gretl'
apply plugin: 'org.hidetake.ssh'

defaultTasks 'standardRun'

// global variables
ext {
    load_extension_spatial = "${rootProject.projectDir}/load_extension_spatial.sql"
    load_extension_httpfs = "${rootProject.projectDir}/load_extension_httpfs.sql"
    load_extension_postgres = "${rootProject.projectDir}/load_extension_postgres.sql"
    attach_editdb = "${rootProject.projectDir}/attach_editdb.sql"
    attach_pubdb = "${rootProject.projectDir}/attach_pubdb.sql"
    detach_editdb = "${rootProject.projectDir}/detach_editdb.sql"
    detach_pubdb = "${rootProject.projectDir}/detach_pubdb.sql"
    set_root_path = "${rootProject.projectDir}/set_root_path.sql"
    export_parquet = "${rootProject.projectDir}/export_parquet.sql"

    // Create DB-variables for sql-files
    dbHostEdit = dbUriEdit.substring(dbUriEdit.indexOf("//") + 2, dbUriEdit.lastIndexOf("/"))
    dbDatabaseEdit = dbUriEdit.substring(dbUriEdit.lastIndexOf("/") + 1)
    dbConnectionStringEdit = "'dbname=$dbDatabaseEdit user=$dbUserEdit password=$dbPwdEdit host=$dbHostEdit'"

    dbHostPub = dbUriPub.substring(dbUriPub.indexOf("//") + 2, dbUriPub.lastIndexOf("/"))
    dbDatabasePub = dbUriPub.substring(dbUriPub.lastIndexOf("/") + 1)
    dbConnectionStringPub = "'dbname=$dbDatabasePub user=$dbUserPub password=$dbPwdPub host=$dbHostPub'"
}

ssh.settings {
    knownHosts = allowAnyHosts
}

// task-list for testing
def TestRun1 = [
    ':04_processing_data:last'
]

// task to run (see defaultTask)
task standardRun(){
    dependsOn TestRun1
}