import ch.so.agi.gretl.api.TransferSet
import java.nio.file.Paths
import java.nio.file.Files
import ch.so.agi.gretl.tasks.*
import ch.so.agi.gretl.api.*
import de.undercouch.gradle.tasks.download.Download

apply plugin: 'ch.so.agi.gretl'
apply plugin: 'org.hidetake.ssh'

defaultTasks 'standardRun'

// global variables
ext {
    load_extension_spatial = "${rootProject.projectDir}/load_extension_spatial.sql"
    load_extension_httpfs = "${rootProject.projectDir}/load_extension_httpfs.sql"
    load_extension_postgres = "${rootProject.projectDir}/load_extension_postgres.sql"
    attach_editdb = "${rootProject.projectDir}/attach_editdb.sql"
    attach_pubdb = "${rootProject.projectDir}/attach_pubdb.sql"
    detach_editdb = "${rootProject.projectDir}/detach_editdb.sql"
    detach_pubdb = "${rootProject.projectDir}/detach_pubdb.sql"
    set_root_path = "${rootProject.projectDir}/set_root_path.sql"
    export_parquet = "${rootProject.projectDir}/export_parquet.sql"
    import_data_dir = "${rootProject.projectDir}/02_import_data/"

    // edit-db-attach-variable for sql-files
    duckDbPostgresqlUriEdit = dbUriEdit.substring('jdbc:'.length())
    .replaceAll('ApplicationName=GRETL', 'application_name=GRETL via DuckDB')
    duckDbPostgresqlUriEdit += "&user=${dbUserEdit}&password=${dbPwdEdit}"
    duckDbPostgresqlUriEdit += "&options=-c%20default_transaction_read_only%3Dtrue"
    // pub-db-attach-variable for sql-files
    duckDbPostgresqlUriPub = dbUriPub.substring('jdbc:'.length())
    .replaceAll('ApplicationName=GRETL', 'application_name=GRETL via DuckDB')
    duckDbPostgresqlUriPub += "&user=${dbUserPub}&password=${dbPwdPub}"
    duckDbPostgresqlUriPub += "&options=-c%20default_transaction_read_only%3Dtrue"
}

ssh.settings {
    knownHosts = allowAnyHosts
}

// $$ task-list for testing - delete when job finished
def TestRun1 = [
    ':03_collect_data:last'
]

def TestRun2 = [
    ':04_processing_data:last'
]

// $$ task to run (see defaultTask) - delete when job finished
task standardRun(){
    dependsOn TestRun2
}