import ch.so.agi.gretl.tasks.*
import ch.so.agi.gretl.api.TransferSet

apply plugin: 'ch.so.agi.gretl'

defaultTasks 'publishPub'


task transferAfugewaessereigenschaften(type: Db2Db){
    sourceDb = [dbUriEdit, dbUserEdit, dbPwdEdit]
    targetDb = [dbUriPub, dbUserPub, dbPwdPub]
    transferSets = [
            new TransferSet('gewaessereigenschaften.sql', 'afu_gewaesser_gewaessereigenschaften_pub_v1.gewaessereigenschaften', true)
    ];
}

task updateTxtCols(type: SqlExecutor, dependsOn:transferAfugewaessereigenschaften){
    description = "FÃ¼llt die _txt-Spalten ab"
    database = [dbUriPub, dbUserPub, dbPwdPub]
    sqlFiles = ['updateTxtCols.sql']
}

task refreshSolr(type:Exec, dependsOn:updateTxtCols){
    commandLine 'curl', '-i', '--max-time', '5', solrIndexupdaterBaseUrl + '/queue?ds=ch.so.awjf.gewaesser.fischereireviere,ch.so.afu.fliessgewaesser.netz'
}

task publishPub(type: Publisher, dependsOn:refreshSolr){
    database = [dbUriPub, dbUserPub, dbPwdPub]
    dataIdent = "ch.so.afu.gewaesser.gewaessereigenschaften"
    dbSchema = "afu_gewaesser_gewaessereigenschaften_pub_v1"
    modelsToPublish = "SO_AFU_Gewaesser_Gewaessereigenschaften_Publikation_20220427"
    userFormats = true
    target = [sftpUrlSogis, sftpUserSogis, sftpPwdSogis]
    kgdiService = [simiMetadataServiceUrl, simiMetadataServiceUser, simiMetadataServicePwd]
    kgdiTokenService = [simiTokenServiceUrl, simiTokenServiceUser, simiTokenServicePwd]
    grooming = new File(file(projectDir).getParentFile(), "publisher_grooming.json")
    if (findProperty('ilivalidatorModeldir')) modeldir = ilivalidatorModeldir
}
