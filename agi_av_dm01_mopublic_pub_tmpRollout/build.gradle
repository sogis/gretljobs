import ch.so.agi.gretl.tasks.*
import ch.so.agi.gretl.api.TransferSet

defaultTasks 'refreshSolr'
def schemaNamePub = 'agi_mopublic_pub'

task transferAgiMopublic(type: Db2Db){
    description = "Datenumbau in das SO-MOpublic-Publikationsmodell."
    sourceDb = [dbUriEdit, dbUserEdit, dbPwdEdit]
    targetDb = [dbUriPub, dbUserPub, dbPwdPub]
    sqlParameters = [basket_tid:'1']
    transferSets = [
        new TransferSet("db2db/agi_mopublic_pub_mopublic_bodenbedeckung_proj.sql", schemaNamePub + ".mopublic_bodenbedeckung_proj", true)
        ,new TransferSet("db2db/agi_mopublic_pub_mopublic_bodenbedeckung.sql", schemaNamePub + ".mopublic_bodenbedeckung", true)
        ,new TransferSet("db2db/agi_mopublic_pub_mopublic_einzelobjekt_flaeche.sql", schemaNamePub + ".mopublic_einzelobjekt_flaeche", true)
        ,new TransferSet("db2db/agi_mopublic_pub_mopublic_einzelobjekt_linie.sql", schemaNamePub + ".mopublic_einzelobjekt_linie", true)
        ,new TransferSet("db2db/agi_mopublic_pub_mopublic_einzelobjekt_punkt.sql", schemaNamePub + ".mopublic_einzelobjekt_punkt", true)
        ,new TransferSet("db2db/agi_mopublic_pub_mopublic_fixpunkt.sql", schemaNamePub + ".mopublic_fixpunkt", true)
        ,new TransferSet("db2db/agi_mopublic_pub_mopublic_flurname.sql", schemaNamePub + ".mopublic_flurname", true)
        ,new TransferSet("db2db/agi_mopublic_pub_mopublic_gebaeudeadresse.sql", schemaNamePub + ".mopublic_gebaeudeadresse", true)
        ,new TransferSet("db2db/agi_mopublic_pub_mopublic_gelaendename.sql", schemaNamePub + ".mopublic_gelaendename", true)
        ,new TransferSet("db2db/agi_mopublic_pub_mopublic_gemeindegrenze_proj.sql", schemaNamePub + ".mopublic_gemeindegrenze_proj", true)
        ,new TransferSet("db2db/agi_mopublic_pub_mopublic_gemeindegrenze.sql", schemaNamePub + ".mopublic_gemeindegrenze", true)
        ,new TransferSet("db2db/agi_mopublic_pub_mopublic_grenzpunkt.sql", schemaNamePub + ".mopublic_grenzpunkt", true)
        ,new TransferSet("db2db/agi_mopublic_pub_mopublic_grundstueck_proj.sql", schemaNamePub + ".mopublic_grundstueck_proj", true)
        ,new TransferSet("db2db/agi_mopublic_pub_mopublic_grundstueck.sql", schemaNamePub + ".mopublic_grundstueck", true)
        ,new TransferSet("db2db/agi_mopublic_pub_mopublic_hoheitsgrenzpunkt.sql", schemaNamePub + ".mopublic_hoheitsgrenzpunkt", true)
        ,new TransferSet("db2db/agi_mopublic_pub_mopublic_objektname_pos.sql", schemaNamePub + ".mopublic_objektname_pos", true)
        ,new TransferSet("db2db/agi_mopublic_pub_mopublic_ortsname.sql", schemaNamePub + ".mopublic_ortsname", true)
        ,new TransferSet("db2db/agi_mopublic_pub_mopublic_rohrleitung.sql", schemaNamePub + ".mopublic_rohrleitung", true)
        ,new TransferSet("db2db/agi_mopublic_pub_mopublic_strassenachse.sql", schemaNamePub + ".mopublic_strassenachse", true)
        ,new TransferSet("db2db/agi_mopublic_pub_mopublic_strassenname_pos.sql", schemaNamePub + ".mopublic_strassenname_pos", true)
    ];
}

task placeInDatasets(type: SqlExecutor, dependsOn: transferAgiMopublic){
    description = "Ubdate der Basket-Refs von default auf BFS-NR"
    database = [dbUriPub, dbUserPub, dbPwdPub]
    sqlParameters = [dbSchema:schemaNamePub]
    sqlFiles = ['dataset/create_bfs_dsets.sql', 'dataset/update_basket_refs.sql']
}


task refreshSolr(type:Exec, dependsOn:placeInDatasets) {
    commandLine 'curl', '-i', '--max-time', '20', solrIndexupdaterBaseUrl + '/queue?ds=ch.so.agi.av.bodenbedeckung,ch.so.agi.av.gebaeudeadressen.gebaeudeeingaenge,ch.so.agi.av.grundstuecke.rechtskraeftig,ch.so.agi.av.grundstuecke.projektierte,ch.so.agi.av.nomenklatur.flurnamen,ch.so.agi.av.nomenklatur.gelaendenamen'
}

