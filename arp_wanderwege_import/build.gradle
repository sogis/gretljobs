import ch.so.agi.gretl.api.TransferSet
import ch.so.agi.gretl.tasks.*
import java.nio.file.Paths
import de.undercouch.gradle.tasks.download.Download

apply plugin: 'de.undercouch.download'
apply plugin: 'ch.so.agi.gretl'


defaultTasks 'importWanderwegeEdit'


// Download-Verzeichnis
def pathToTempFolder = System.getProperty('java.io.tmpdir')
// def pathToUnzipFolder = Paths.get(pathToTempFolder, 'unzip_data')
// def pathToDataZip = Paths.get(pathToTempFolder, 'NachF_LWZ_INTERLIS2.zip')



task deleteFromWanderwegeTables(type: SqlExecutor) {
    description = 'LÃ¶scht die Daten aus dem Schema.'
    database = [dbUriEdit, dbUserEdit, dbPwdEdit]
    sqlFiles = ['delete_arp_wanderwege_tables.sql']
}

task downloadKataloge(type: Download, dependsOn: deleteFromWanderwegeTables){
    description = 'Download der Kataloge'
    src 'https://models.geo.admin.ch/BLW/LWB_Landwirtschaftliche_Zonengrenzen_Kataloge_V2_0.xml'
    dest pathToTempFolder
    overwrite true
}

/*
task copyXtfFile(type: Copy) {
    from "upload/"
    into "upload/"
    include("uploadFile")
    rename("uploadFile", "uploadFile.xtf")
}*/

task importKataloge(type: Ili2pgReplace, dependsOn: downloadKataloge){
     description = 'Import der Kataloge'
     database = [dbUriEdit, dbUserEdit, dbPwdEdit]
     dbschema = 'arp_wanderwege_v2'
     models = 'hpm_network_V1'
     dataFile = 'Hpm_Catalogues_V1.xml'
     dataset = 'Hpm_Catalogues_V1.xml'
     importTid = true
     importBid = true
}

/*
task rename(type: Copy) {
    from 'upload'
    into 'upload'
    rename 'uploadFile','uploadFile.xtf'
}

task importWanderwegeEdit(type: Ili2pgImport, dependsOn: importKataloge){
     description = 'Import der Wanderwege aus MISTRA in die Edit-DB'
     database = [dbUriEdit, dbUserEdit, dbPwdEdit]
     dbschema = 'arp_wanderwege_v2'
     models = 'hpm_network_V1'
     dataFile = 'upload/uploadFile.xtf'
     dataset = 'LV_Hpm_Network_V1.xtf'
     importTid = true
     importBid = true
}
*/

task importWanderwegeEdit(type: Ili2pgReplace, dependsOn: importKataloge){
     description = 'Import der Wanderwege aus MISTRA in die Edit-DB'
     database = [dbUriEdit, dbUserEdit, dbPwdEdit]
     dbschema = 'arp_wanderwege_v2'
     models = 'hpm_network_V1'
     dataFile = 'LV_Hpm_Network_V1.xtf'
     dataset = 'LV_Hpm_Network_V1.xtf'
     importTid = true
     importBid = true
                                                                                            disableValidation = true    // es sind noch
}

task deleteOutsidePerimeter(type: SqlExecutor, dependsOn: importWanderwegeEdit){
    database = [dbUriEdit, dbUserEdit, dbPwdEdit]
    sqlFiles = ['delete_outside_perimeter.sql']
}


