apply plugin: 'ch.so.agi.gretl'
apply plugin: 'de.undercouch.download'

import ch.so.agi.gretl.tasks.*
import ch.so.agi.gretl.api.TransferSet
import java.nio.file.Paths

defaultTasks 'publishPub'

/*
Bei der Aktualisierung 2025 musste G+P das Modell kosmetisch anpassen. Damit aufgrund dieser
Anpassung nicht alle Schemen inkl. Kataloge neu angelegt werden m√ºssen, wurde das gelieferte
XTF auf das alte Modell angepasst (Search SO_AVT_Strassenlaerm_20250813 Replace SO_AVT_Strassenlaerm_20190806).
*/

def filename = 'xyz.xtf'

task replaceDataset (type: Ili2pgReplace) {
    description = "Ersetzt die Daten in der Edit-DB."
    database = [dbUriEdit, dbUserEdit, dbPwdEdit]
    dbschema = "avt_strassenlaerm_v1"
    models = "SO_AVT_Strassenlaerm_20190806"
    disableValidation = true
    importTid = true
    dataset = "data"
    dataFile = file(filename)
}

task publishEdit(type: Publisher, dependsOn: replaceDataset){
    database = [dbUriEdit, dbUserEdit, dbPwdEdit]
    dataIdent = "ch.so.avt.strassenlaerm.relational"
    dbSchema = "avt_strassenlaerm_v1"
    dataset = "data"
    target = [sftpUrlSogis, sftpUserSogis, sftpPwdSogis]
    kgdiService = [simiMetadataServiceUrl, simiMetadataServiceUser, simiMetadataServicePwd]
    kgdiTokenService = [simiTokenServiceUrl, simiTokenServiceUser, simiTokenServicePwd]
    grooming = new File(file(projectDir).getParentFile(), "publisher_grooming.json")
    if (findProperty('ilivalidatorModeldir')) modeldir = ilivalidatorModeldir
}

task transferData(type: Db2Db, dependsOn: publishEdit) {
    sourceDb = [dbUriEdit, dbUserEdit, dbPwdEdit]
    targetDb = [dbUriPub, dbUserPub, dbPwdPub]
    transferSets = [
            new TransferSet("transform_immission_strasse_pointofdetermination.sql", 'avt_strassenlaerm_pub_v1.strassenlaerm_belastung', true)
    ];
}

task publishPub(type: Publisher, dependsOn:transferData){
    database = [dbUriPub, dbUserPub, dbPwdPub]
    dataIdent = "ch.so.avt.strassenlaerm"
    dbSchema = "avt_strassenlaerm_pub_v1"
    modelsToPublish = "SO_AVT_Strassenlaerm_Publikation_20190802"
    userFormats = true
    target = [sftpUrlSogis, sftpUserSogis, sftpPwdSogis]
    kgdiService = [simiMetadataServiceUrl, simiMetadataServiceUser, simiMetadataServicePwd]
    kgdiTokenService = [simiTokenServiceUrl, simiTokenServiceUser, simiTokenServicePwd]
    grooming = new File(file(projectDir).getParentFile(), "publisher_grooming.json")
    if (findProperty('ilivalidatorModeldir')) modeldir = ilivalidatorModeldir
}
