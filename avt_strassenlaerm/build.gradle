apply plugin: 'ch.so.agi.gretl'
apply plugin: 'de.undercouch.download'

import ch.so.agi.gretl.tasks.*
import ch.so.agi.gretl.api.TransferSet
import java.nio.file.Paths

defaultTasks 'transferData'
//defaultTasks 'replaceDataset'

ext {
    pathToTempFolder = System.getProperty("java.io.tmpdir")
    xtfFilePath = Paths.get(pathToTempFolder.toString(), 'strassenlaerm_KGDM_SO_20200115.xtf')
    filename = 'strassenlaerm_KGDM_SO_20200115.xtf'
}

task downloadData(type: Download) {
    //src 'https://s3.eu-central-1.amazonaws.com/ch.so.avt.strassenlaerm/strassenlaerm_KGDM_20191023.xtf'
    src 'https://s3.eu-central-1.amazonaws.com/ch.so.avt.strassenlaerm/' + filename
    dest pathToTempFolder
    overwrite true

    doLast {
        println "File downloaded to: " + pathToTempFolder
    }    
}


task replaceDataset (type: Ili2pgReplace, dependsOn: downloadData) {
    description = "Ersetzt die Daten in der Edit-DB."
    database = [dbUriEdit, dbUserEdit, dbPwdEdit]
    dbschema = "avt_strassenlaerm"
    models = "SO_AVT_Strassenlaerm_20190806"
    if (findProperty('ili2dbModeldir')) modeldir = ili2dbModeldir
    disableValidation = true
    importTid = true
    dataset = "data"
    dataFile = file(xtfFilePath)
    //dataFile = "strassenlaerm.xtf" // name is injected by jenkins
}


task transferData(type: Db2Db, dependsOn: replaceDataset) {
    sourceDb = [dbUriEdit, dbUserEdit, dbPwdEdit]
    targetDb = [dbUriPub, dbUserPub, dbPwdPub]
    transferSets = [
            new TransferSet("transform_immission_strasse_pointofdetermination.sql", 'avt_strassenlaerm_pub.strassenlaerm_belastung', true)
    ];
}
