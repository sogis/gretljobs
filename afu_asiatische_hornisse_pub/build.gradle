import ch.so.agi.gretl.tasks.*
import ch.so.agi.gretl.api.TransferSet

apply plugin: 'ch.so.agi.gretl'

description = "GRETL-Job für Datenübernahme der Asiatischen Hornisse innerhalb der edit-DB, ins pub-Schema (pub-DB, edit-DB)"

defaultTasks 'transferAfuAsiatischeHornissePub', 'updateSearchIndexNester','updateSearchIndexNesterGeschuetzt','updateSearchIndexSichtungen','updateSearchIndexSichtungenGeschuetzt'

task transferAfuAsiatischeHornissePub(type: Db2Db) {
    sourceDb = [dbUriEdit, dbUserEdit, dbPwdEdit]
    targetDb = [dbUriPub, dbUserPub, dbPwdPub]
    transferSets = [
            new TransferSet('afu_asiatische_hornisse_nest_pub.sql', 'afu_asiatische_hornisse_pub_v2.asia_hornisse_nest', true),
            new TransferSet('afu_asiatische_hornisse_sichtung_pub.sql', 'afu_asiatische_hornisse_pub_v2.asia_hornisse_sichtung', true)
    ]
}

tasks.register('updateSearchIndexSichtungen', SqlExecutor) {
    mustRunAfter 'transferAfuAsiatischeHornissePub'
    String layerNameStringQuoted = "'ch.so.afu.asiatische_hornisse.sichtungen'"
    String fileNameString = 'searchindex_ch.so.afu.asiatische_hornisse.sichtungen.sql'
    String dbSearchSchemaString = dbSearchSchemaPub

    database = [dbUriPub, dbUserPub, dbPwdPub]
    sqlParameters = [
            [layername: layerNameStringQuoted, db_schema: dbSearchSchemaString]
    ]
    sqlFiles = [
            '../searchindex_deleteFeatures.sql',
            fileNameString
    ]
    doFirst {
        println 'Updating index for layer ' + layerNameStringQuoted
    }
}

tasks.register('updateSearchIndexSichtungenGeschuetzt', SqlExecutor) {
    mustRunAfter 'transferAfuAsiatischeHornissePub'
    String layerNameStringQuoted = "'ch.so.afu.asiatische_hornisse.sichtungen_geschuetzt'"
    String fileNameString = 'searchindex_ch.so.afu.asiatische_hornisse.sichtungen.sql'
    String dbSearchSchemaString = dbSearchSchemaPub

    database = [dbUriPub, dbUserPub, dbPwdPub]
    sqlParameters = [
            [layername: layerNameStringQuoted, db_schema: dbSearchSchemaString]
    ]
    sqlFiles = [
            '../searchindex_deleteFeatures.sql',
            fileNameString
    ]
    doFirst {
        println 'Updating index for layer ' + layerNameStringQuoted
    }
}

tasks.register('updateSearchIndexNester', SqlExecutor) {
    mustRunAfter 'transferAfuAsiatischeHornissePub'
    String layerNameStringQuoted = "'ch.so.afu.asiatische_hornisse.nester'"
    String fileNameString = 'searchindex_ch.so.afu.asiatische_hornisse.nester.sql'
    String dbSearchSchemaString = dbSearchSchemaPub

    database = [dbUriPub, dbUserPub, dbPwdPub]
    sqlParameters = [
            [layername: layerNameStringQuoted, db_schema: dbSearchSchemaString]
    ]
    sqlFiles = [
            '../searchindex_deleteFeatures.sql',
            fileNameString
    ]
    doFirst {
        println 'Updating index for layer ' + layerNameStringQuoted
    }
}

tasks.register('updateSearchIndexNesterGeschuetzt', SqlExecutor) {
    mustRunAfter 'transferAfuAsiatischeHornissePub'
    String layerNameStringQuoted = "'ch.so.afu.asiatische_hornisse.nester_geschuetzt'"
    String fileNameString = 'searchindex_ch.so.afu.asiatische_hornisse.nester.sql'
    String dbSearchSchemaString = dbSearchSchemaPub

    database = [dbUriPub, dbUserPub, dbPwdPub]
    sqlParameters = [
            [layername: layerNameStringQuoted, db_schema: dbSearchSchemaString]
    ]
    sqlFiles = [
            '../searchindex_deleteFeatures.sql',
            fileNameString
    ]
    doFirst {
        println 'Updating index for layer ' + layerNameStringQuoted
    }
}