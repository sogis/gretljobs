import ch.so.agi.gretl.tasks.*
import ch.so.agi.gretl.api.TransferSet

apply plugin: 'ch.so.agi.gretl'

description = "GRETL-Job für Datenübernahme der Asiatischen Hornisse innerhalb der edit-DB, ins pub-Schema (pub-DB, edit-DB)"

defaultTasks 'transferAfuAsiatischeHornissePub','refreshSolr','updateSearchIndexNester','updateSearchIndexSichtungen'

task transferAfuAsiatischeHornissePub(type: Db2Db) {
    sourceDb = [dbUriEdit, dbUserEdit, dbPwdEdit]
    targetDb = [dbUriPub, dbUserPub, dbPwdPub]
    transferSets = [
            new TransferSet('afu_asiatische_hornisse_nest_pub.sql', 'afu_asiatische_hornisse_pub_v2.asia_hornisse_nest', true),
            new TransferSet('afu_asiatische_hornisse_sichtung_pub.sql', 'afu_asiatische_hornisse_pub_v2.asia_hornisse_sichtung', true)
    ]
}

task refreshSolr(type:Exec) {
    mustRunAfter 'transferAfuAsiatischeHornissePub'
    commandLine 'curl', '-i', '--max-time', '5', solrIndexupdaterBaseUrl + '/queue?ds=ch.so.afu.asiatische_hornisse'
}

task updateSearchIndexNester(type: SqlExecutor){
    mustRunAfter 'transferAfuAsiatischeHornissePub'
    def layerName = 'ch.so.afu.asiatische_hornisse.nester'

    database = [dbUriPub, dbUserPub, dbPwdPub]
    def dbSearchSchema = dbSearchSchemaPub

    String layerNameString = "'${layerName}'"
    sqlParameters = [
            [layername: layerNameString, db_schema: dbSearchSchema]
    ]
    sqlFiles = [
            '../searchindex_deleteFeatures.sql',
            'searchindex_' + layerName + '.sql'
    ]
    doFirst {
        println 'layer name: ' + layerName
    }
}

task updateSearchIndexSichtungen(type: SqlExecutor){
    mustRunAfter 'transferAfuAsiatischeHornissePub'
    def layerName = 'ch.so.afu.asiatische_hornisse.sichtungen'

    database = [dbUriPub, dbUserPub, dbPwdPub]
    def dbSearchSchema = dbSearchSchemaPub

    String layerNameString = "'${layerName}'"
    sqlParameters = [
            [layername: layerNameString, db_schema: dbSearchSchema]
    ]
    sqlFiles = [
            '../searchindex_deleteFeatures.sql',
            'searchindex_' + layerName + '.sql'
    ]
    doFirst {
        println 'layer name: ' + layerName
    }
}