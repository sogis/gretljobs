import ch.so.agi.gretl.tasks.*
import ch.so.agi.gretl.api.TransferSet

apply plugin: 'ch.so.agi.gretl'

description = "GRETL-Job für Datenübernahme der Asiatischen Hornisse innerhalb der edit-DB, ins pub-Schema (pub-DB, edit-DB)"

defaultTasks 'transferAfuAsiatischeHornissePub','refreshSolr','updateSearchIndexNester','updateSearchIndexNesterGeschuetzt','updateSearchIndexSichtungen','updateSearchIndexSichtungenGeschuetzt'

task transferAfuAsiatischeHornissePub(type: Db2Db) {
    sourceDb = [dbUriEdit, dbUserEdit, dbPwdEdit]
    targetDb = [dbUriPub, dbUserPub, dbPwdPub]
    transferSets = [
            new TransferSet('afu_asiatische_hornisse_nest_pub.sql', 'afu_asiatische_hornisse_pub_v2.asia_hornisse_nest', true),
            new TransferSet('afu_asiatische_hornisse_sichtung_pub.sql', 'afu_asiatische_hornisse_pub_v2.asia_hornisse_sichtung', true)
    ]
}

task refreshSolr(type:Exec) {
    mustRunAfter 'transferAfuAsiatischeHornissePub'
    commandLine 'curl', '-i', '--max-time', '5', solrIndexupdaterBaseUrl + '/queue?ds=ch.so.afu.asiatische_hornisse'
}

// Suchindex aktualisieren: Konfiguration (Zuordnung von Tasknamen und Layernamen festlegen)
def layerTasks = [
    'updateSearchIndexSichtungen': 'ch.so.afu.asiatische_hornisse.sichtungen',
    'updateSearchIndexSichtungenGeschuetzt': 'ch.so.afu.asiatische_hornisse.sichtungen_geschuetzt', 
    'updateSearchIndexNester': 'ch.so.afu.asiatische_hornisse.nester',
    'updateSearchIndexNesterGeschuetzt': 'ch.so.afu.asiatische_hornisse.nester_geschuetzt'
]

// Suchindex aktualisieren: Tasks dynamisch erstellen
layerTasks.each { taskName, layerName ->
    tasks.register(taskName, SqlExecutor) {
        mustRunAfter 'transferAfuAsiatischeHornissePub'
        
        database = [dbUriPub, dbUserPub, dbPwdPub]
        def dbSearchSchema = dbSearchSchemaPub
        String layerNameString = "'${layerName}'"

        sqlParameters = [
                [layername: layerNameString, db_schema: dbSearchSchema]
        ]
        sqlFiles = [
                '../searchindex_deleteFeatures.sql',
                'searchindex_' + layerName + '.sql'
        ]
        doFirst {
            println 'Updating index for layer: ' + layerName
        }
    }
}